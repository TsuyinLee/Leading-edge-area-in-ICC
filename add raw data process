setwd("D:\\leadtest")
library(Seurat)
library(ggplot2) 
library(stringr)
####read all raw 10x-Genomic data
#add sample names and positional info
P01_J <- Read10X(data.dir = "D:\\leadtest\\brxP01\\filtered_feature_bc_matrix") 
P02_J <- Read10X(data.dir = "D:\\leadtest\\wlP02\\filtered_feature_bc_matrix") 
P03_J <- Read10X(data.dir = ".\\dxP03\\LC_4443181_J_filtered_feature_bc_matrix") 
P03_T <- Read10X(data.dir = ".\\dxP03\\LC_4443181_T_filtered_feature_bc_matrix") 
P03_N <- Read10X(data.dir = ".\\dxP03\\LC_4443181_N_filtered_feature_bc_matrix") 
P04_J <- Read10X(data.dir = ".\\zlqP04\\LC_4442779_J_filtered_feature_bc_matrix") 
P04_T <- Read10X(data.dir = ".\\zlqP04\\LC_4442779_T_filtered_feature_bc_matrix") 
P04_N <- Read10X(data.dir = ".\\zlqP04\\LC_4442779_N_filtered_feature_bc_matrix") 
P05_J <- Read10X(data.dir = ".\\lhlP05\\LC_4449658_J_filtered_feature_bc_matrix") 
P05_T <- Read10X(data.dir = ".\\lhlP05\\LC_4449658_T_filtered_feature_bc_matrix") 
P05_N <- Read10X(data.dir = ".\\lhlP05\\LC_4449658_N_filtered_feature_bc_matrix") 
P06_J <- Read10X(data.dir = ".\\yzqP06\\LC_4453874_J_out_filtered_feature_bc_matrix") 
P06_T <- Read10X(data.dir = ".\\yzqP06\\LC_4453874_T_out_filtered_feature_bc_matrix") 
P06_N <- Read10X(data.dir = ".\\yzqP06\\LC_4453874_N_out_filtered_feature_bc_matrix") 

P01_J@Dimnames[[2]] <- paste0("P01_J-",P01_J@Dimnames[[2]])
P02_J@Dimnames[[2]] <- paste0("P02_J-",P02_J@Dimnames[[2]])
P03_J@Dimnames[[2]] <- paste0("P03_J-",P03_J@Dimnames[[2]])
P03_T@Dimnames[[2]] <- paste0("P03_T-",P03_T@Dimnames[[2]])
P03_N@Dimnames[[2]] <- paste0("P03_N-",P03_N@Dimnames[[2]])
P04_J@Dimnames[[2]] <- paste0("P04_J-",P04_J@Dimnames[[2]])
P04_T@Dimnames[[2]] <- paste0("P04_T-",P04_T@Dimnames[[2]])
P04_N@Dimnames[[2]] <- paste0("P04_N-",P04_N@Dimnames[[2]])
P05_J@Dimnames[[2]] <- paste0("P05_J-",P05_J@Dimnames[[2]])
P05_T@Dimnames[[2]] <- paste0("P05_T-",P05_T@Dimnames[[2]])
P05_N@Dimnames[[2]] <- paste0("P05_N-",P05_N@Dimnames[[2]])

P06_J@Dimnames[[2]] <- paste0("P06_J-",P06_J@Dimnames[[2]])
P06_T@Dimnames[[2]] <- paste0("P06_T-",P06_T@Dimnames[[2]])
P06_N@Dimnames[[2]] <- paste0("P06_N-",P06_N@Dimnames[[2]])

P01_Jsce <- CreateSeuratObject(counts = P01_J, project = "P01_J")
P02_Jsce <- CreateSeuratObject(counts = P02_J, project = "P02_J")
P03_Jsce <- CreateSeuratObject(counts = P03_J, project = "P03_J")
P03_Tsce <- CreateSeuratObject(counts = P03_T, project = "P03_T")
P03_Nsce <- CreateSeuratObject(counts = P03_N, project = "P03_N")
P04_Jsce <- CreateSeuratObject(counts = P04_J, project = "P04_J")
P04_Tsce <- CreateSeuratObject(counts = P04_T, project = "P04_T")
P04_Nsce <- CreateSeuratObject(counts = P04_N, project = "P04_N")
P05_Jsce <- CreateSeuratObject(counts = P05_J, project = "P05_J")
P05_Tsce <- CreateSeuratObject(counts = P05_T, project = "P05_T")
P05_Nsce <- CreateSeuratObject(counts = P05_N, project = "P05_N")
P06_Jsce <- CreateSeuratObject(counts = P06_J, project = "P06_J")
P06_Tsce <- CreateSeuratObject(counts = P06_T, project = "P06_T")
P06_Nsce <- CreateSeuratObject(counts = P06_N, project = "P06_N")



P01_Jsce@meta.data$patient_id <- "P01_J"
P02_Jsce@meta.data$patient_id <- "P02_J"
P03_Jsce@meta.data$patient_id <- "P03_J"
P03_Tsce@meta.data$patient_id <- "P03_T"
P03_Nsce@meta.data$patient_id <- "P03_N"
P04_Jsce@meta.data$patient_id <- "P04_J"
P04_Tsce@meta.data$patient_id <- "P04_T"
P04_Nsce@meta.data$patient_id <- "P04_N"
P05_Jsce@meta.data$patient_id <- "P05_J"
P05_Tsce@meta.data$patient_id <- "P05_T"
P05_Nsce@meta.data$patient_id <- "P05_N"
P06_Jsce@meta.data$patient_id <- "P06_J"
P06_Tsce@meta.data$patient_id <- "P06_T"
P06_Nsce@meta.data$patient_id <- "P06_N"

P07_J <- Read10X(data.dir = ".\\GYLP07\\4458602_J\\filtered_feature_bc_matrix") 
P07_T <- Read10X(data.dir = ".\\GYLP07\\4458602_T\\filtered_feature_bc_matrix") 
P07_N <- Read10X(data.dir = ".\\GYLP07\\4458602_N\\filtered_feature_bc_matrix") 
P07_J@Dimnames[[2]] <- paste0("P07_J-",P07_J@Dimnames[[2]])
P07_T@Dimnames[[2]] <- paste0("P07_T-",P07_T@Dimnames[[2]])
P07_N@Dimnames[[2]] <- paste0("P07_N-",P07_N@Dimnames[[2]])
P07_Jsce <- CreateSeuratObject(counts = P07_J, project = "P07_J")
P07_Tsce <- CreateSeuratObject(counts = P07_T, project = "P07_T")
P07_Nsce <- CreateSeuratObject(counts = P07_N, project = "P07_N")
P07_Jsce@meta.data$patient_id <- "P07_J"
P07_Tsce@meta.data$patient_id <- "P07_T"
P07_Nsce@meta.data$patient_id <- "P07_N"

P08_J <- Read10X(data.dir = ".\\cwP08\\LC_4459299J_out\\filtered_feature_bc_matrix") 
P08_T <- Read10X(data.dir = ".\\cwP08\\LC_4459299T_out\\filtered_feature_bc_matrix") 
P08_N <- Read10X(data.dir = ".\\cwP08\\LC_4459299N_out\\filtered_feature_bc_matrix") 
P08_J@Dimnames[[2]] <- paste0("P08_J-",P08_J@Dimnames[[2]])
P08_T@Dimnames[[2]] <- paste0("P08_T-",P08_T@Dimnames[[2]])
P08_N@Dimnames[[2]] <- paste0("P08_N-",P08_N@Dimnames[[2]])
P08_Jsce <- CreateSeuratObject(counts = P08_J, project = "P08_J")
P08_Tsce <- CreateSeuratObject(counts = P08_T, project = "P08_T")
P08_Nsce <- CreateSeuratObject(counts = P08_N, project = "P08_N")
P08_Jsce@meta.data$patient_id <- "P08_J"
P08_Tsce@meta.data$patient_id <- "P08_T"
P08_Nsce@meta.data$patient_id <- "P08_N"

P09_J <- Read10X(data.dir = "D:\\leadtest\\hqgP09\\LC_4473993_J") 
P09_T <- Read10X(data.dir = "D:\\leadtest\\hqgP09\\LC_4473993_T") 
P09_N <- Read10X(data.dir = "D:\\leadtest\\hqgP09\\LC_4473993_N") 
P09_J@Dimnames[[2]] <- paste0("P09_J-",P09_J@Dimnames[[2]])
P09_T@Dimnames[[2]] <- paste0("P09_T-",P09_T@Dimnames[[2]])
P09_N@Dimnames[[2]] <- paste0("P09_N-",P09_N@Dimnames[[2]])
P09_Jsce <- CreateSeuratObject(counts = P09_J, project = "P09_J")
P09_Tsce <- CreateSeuratObject(counts = P09_T, project = "P09_T")
P09_Nsce <- CreateSeuratObject(counts = P09_N, project = "P09_N")
P09_Jsce@meta.data$patient_id <- "P09_J"
P09_Tsce@meta.data$patient_id <- "P09_T"
P09_Nsce@meta.data$patient_id <- "P09_N"
P10_J <- Read10X(data.dir = "D:\\leadtest\\zyhP10\\4477870_ZYH_J_out") 
P10_T <- Read10X(data.dir = "D:\\leadtest\\zyhP10\\4477870_ZYH_T_out") 
P10_N <- Read10X(data.dir = "D:\\leadtest\\zyhP10\\4477870_ZYH_N_out") 
P10_J@Dimnames[[2]] <- paste0("P10_J-",P10_J@Dimnames[[2]])
P10_T@Dimnames[[2]] <- paste0("P10_T-",P10_T@Dimnames[[2]])
P10_N@Dimnames[[2]] <- paste0("P10_N-",P10_N@Dimnames[[2]])
P10_Jsce <- CreateSeuratObject(counts = P10_J, project = "P10_J")
P10_Tsce <- CreateSeuratObject(counts = P10_T, project = "P10_T")
P10_Nsce <- CreateSeuratObject(counts = P10_N, project = "P10_N")
P10_Jsce@meta.data$patient_id <- "P10_J"
P10_Tsce@meta.data$patient_id <- "P10_T"
P10_Nsce@meta.data$patient_id <- "P10_N"
P11_J <- Read10X(data.dir = "D:\\leadtest\\shyP11\\LC_4485703_J\\filtered_feature_bc_matrix") 
P11_T <- Read10X(data.dir = "D:\\leadtest\\shyP11\\LC_4485703_T\\filtered_feature_bc_matrix") 
P11_N <- Read10X(data.dir = "D:\\leadtest\\shyP11\\LC_4485703_N\\filtered_feature_bc_matrix") 
P11_J@Dimnames[[2]] <- paste0("P11_J-",P11_J@Dimnames[[2]])
P11_T@Dimnames[[2]] <- paste0("P11_T-",P11_T@Dimnames[[2]])
P11_N@Dimnames[[2]] <- paste0("P11_N-",P11_N@Dimnames[[2]])
P11_Jsce <- CreateSeuratObject(counts = P11_J, project = "P11_J")
P11_Tsce <- CreateSeuratObject(counts = P11_T, project = "P11_T")
P11_Nsce <- CreateSeuratObject(counts = P11_N, project = "P11_N")
P11_Jsce@meta.data$patient_id <- "P11_J"
P11_Tsce@meta.data$patient_id <- "P11_T"
P11_Nsce@meta.data$patient_id <- "P11_N"
#merge all raw data into a large seurat file
ICC <- merge(P01_Jsce,
             y = c(P02_Jsce,
                   P03_Jsce,P03_Tsce,P03_Nsce,
                   P04_Jsce,P04_Tsce,P04_Nsce,
                   P05_Jsce,P05_Tsce,P05_Nsce,
                   P06_Jsce,P06_Tsce,P06_Nsce,
                   P07_Jsce,P07_Tsce,P07_Nsce,
                   P08_Jsce,P08_Tsce,P08_Nsce,
                   P09_Jsce,P09_Tsce,P09_Nsce,
                   P10_Jsce,P10_Tsce,P10_Nsce,
                   P11_Jsce,P11_Tsce,P11_Nsce
                   ), project = "ICC"
             )
#check patient_id
table(ICC@meta.data$patient_id)

#add positional info to meta.data
ICC@meta.data$type <-str_split_fixed(ICC$patient_id,"_",2)[,2]
table(ICC$type)
#add patient info to meta.data
ICC@meta.data$patient <-str_split_fixed(ICC$patient_id,"_",2)[,1]
table(ICC$patient)
#rank the positional info
ICC$type <- factor(ICC$type,c("N","J","T"))
table(ICC$type)
#save all raw data
save(ICC,file ="ICC11_case.RData")

rm(list=ls());gc()
load("ICC11_case.RData")
#Due to the inability to ascertain the pathological information for P04 and P09, these samples are excluded.
ICC <- subset(ICC, cells = colnames(ICC)[which(!ICC$patient %in% c("P04","P09"))])
table(ICC$patient)
names(ICC@meta.data)
#quality control
#mito
mito_genes=rownames(ICC)[grep("^MT-", rownames(ICC))] 
mito_genes 
ICC=PercentageFeatureSet(ICC, "^MT-", col.name = "percent_mito")
fivenum(ICC@meta.data$percent_mito)
#ribo
ribo_genes=rownames(ICC)[grep("^Rp[sl]", rownames(ICC),ignore.case = T)]
ribo_genes
ICC=PercentageFeatureSet(ICC, "^RP[SL]", col.name = "percent_ribo")
fivenum(ICC@meta.data$percent_ribo)
#Hb
rownames(ICC)[grep("^Hb[^(p)]", rownames(ICC),ignore.case = T)]
ICC=PercentageFeatureSet(ICC, "^HB[^(P)]", col.name = "percent_hb")
fivenum(ICC@meta.data$percent_hb)
#
feats <- c("nFeature_RNA", "nCount_RNA")
table(ICC$orig.ident)
VlnPlot(ICC, group.by = "patient_id", features = feats, pt.size = 0, ncol = 1) + 
  NoLegend()
ggsave("nFea_nCount_before_QC.pdf",height = 6,width = 12)
feats <- c("percent_mito", "percent_ribo", "percent_hb")#感觉线粒体基因比例有点高
VlnPlot(ICC, group.by = "patient_id", features = feats, pt.size = 0.01, ncol = 1, same.y.lims=T) + 
  scale_y_continuous(breaks=seq(0, 100, 5)) +
  NoLegend()
ggsave("mito_ribo_hb_beforeQC.pdf",height = 9,width = 12)
FeatureScatter(ICC, "nCount_RNA", "nFeature_RNA", group.by = "orig.ident", pt.size = 0.5)
ggsave("nFeature_nCount_scatter_beforeQC.pdf",height = 6,width = 6)
#根据上述指标，过滤低质量细胞/基因
#过滤指标1:最少表达基因数的细胞&最少表达细胞数的基因
selected_c <- WhichCells(ICC, expression = nFeature_RNA > 500)
selected_f <- rownames(ICC)[Matrix::rowSums(ICC@assays$RNA@counts > 0 ) > 20]
ICC.filt <- subset(ICC, features = selected_f, cells = selected_c)
#过滤前/过滤后
dim(ICC) 
dim(ICC.filt) 
#过滤指标2:线粒体/核糖体基因比例(根据上面的violin图),
selected_mito <- WhichCells(ICC.filt, expression = percent_mito < 25)#文章写了超过20%的去除
length(selected_mito)
#selected_ribo <- WhichCells(ICC.filt, expression = percent_ribo > 3)#我的数据里核糖体的比例也有点高
#length(selected_ribo)
#selected_hb <- WhichCells(ICC.filt, expression = percent_hb < 0.1)
#length(selected_hb)

#31302
ICC.filt <- subset(ICC.filt, cells = selected_mito)
#ICC.filt <- subset(ICC.filt, cells = selected_ribo)
#ICC.filt <- subset(ICC.filt, cells = selected_hb)
dim(ICC) #before
dim(ICC.filt)#after

table(ICC.filt$patient_id) #看一下每个病人多少
#这里需要做个图，每个病人过滤后多少个细胞

#可视化过滤后的情况
feats <- c("nFeature_RNA", "nCount_RNA")
VlnPlot(ICC.filt, group.by = "patient_id", features = feats, pt.size = 0.1, ncol = 1) + 
  NoLegend()
ggsave("nFeat_nCount_afterQC.pdf",height = 6,width = 12)

#指控后线粒体基因情况
feats <- c("percent_mito", "percent_ribo", "percent_hb")
VlnPlot(ICC.filt, group.by = "patient_id", features = feats, pt.size = 0.1, ncol = 1) + 
  NoLegend()
ggsave("mito_ribo_hb_afterQC.pdf",height = 9,width = 12)
#保存数据
save(ICC.filt, file = "ICC.filt_9_ICCcase.RData")

#分群
rm(list=ls());gc()
load("ICC.filt_9_ICCcase.RData")
#scale data
sce=ICC.filt 
#给位置信息排序####
sce$type <- factor(sce$type,c("N","J","T"))
rm(ICC.filt)
sce

sce <- NormalizeData(sce,normalization.method = "LogNormalize") 
sce <- FindVariableFeatures(sce)
sce <- FindVariableFeatures(object = sce, selection.method = "vst", nfeatures = 2000)
sce <- ScaleData(sce)##应用线性变换缩放数据，这是一个标准的预处理步骤，比PCA等降维技术更重要。使用ScaleData函数（1）使每个基因在所有细胞间的表达量均值为0（2）使每个基因在所有细胞间的表达量方差为1
sce <- RunPCA(sce
              #, features = rownames(sce)
              )
#sce <- RunPCA(sce, features = VariableFeatures(object = sce),dims =1:50)
#VizDimLoadings(object = sce, dims = 1:4, reduction = "pca",nfeatures = 20)
#Idents(sce) <- sce@meta.data$old.ident#把（）设为active_idents
#DimPlot(object = sce, reduction = "pca")
#DimHeatmap(object = sce, dims = 1:4, balanced = TRUE,nfeatures = 10,ncol=2)
#sce <- JackStraw(object = sce, num.replicate = 100,dims = 50)
#sce <- ScoreJackStraw(object = sce, dims = 1:50)
#JackStrawPlot(object = sce, dims = 1:50)
#ggsave("pcaJackStraw.pdf",width=12,height=6)
#ElbowPlot(sce,ndims = 50, reduction = "pca")
#ggsave("Elobowplot.pdf",width=6,height=6)
sce <- RunTSNE(object = sce,dims = 1:20)
#sce <- RunTSNE(object = sce)
DimPlot(sce, reduction = "tsne", label = T)
names(sce@reductions)
sce <- RunUMAP(sce,dims =1:20, reduction = "pca")
#DimPlot(sce,reduction = "umap",group.by = "orig.ident") 
DimPlot(sce,reduction = "umap",group.by = "patient_id",raster=FALSE) 
sce <- FindNeighbors(sce) 
####选择不同的分辨率#####
#设置不同的分辨率，观察分群效果
for (res in c(0.01, 0.05, 0.1,0.15, 0.2, 0.3, 0.5,0.8,1,1.5,2,3)) {
  sce=FindClusters(sce, #graph.name = "CCA_snn", 
                   resolution = res, algorithm = 1)
}
colnames(sce@meta.data)
apply(sce@meta.data[,grep("RNA_snn",colnames(sce@meta.data))],2,table)
library(cowplot)
sce_dim <-plot_grid(ncol = 3, 
                    DimPlot(sce, reduction = "umap", group.by = "RNA_snn_res.0.01") +ggtitle("louvain_0.01"), 
                    DimPlot(sce, reduction = "umap", group.by = "RNA_snn_res.0.05") + ggtitle("louvain_0.05"),
                    DimPlot(sce, reduction = "umap", group.by = "RNA_snn_res.0.1") +  ggtitle("louvain_0.1"), 
                    DimPlot(sce, reduction = "umap", group.by = "RNA_snn_res.0.15") + ggtitle("louvain_0.15"),
                    DimPlot(sce, reduction = "umap", group.by = "RNA_snn_res.0.2") + ggtitle("louvain_0.2"),
                    DimPlot(sce, reduction = "umap", group.by = "RNA_snn_res.0.3") +ggtitle("louvain_0.3")
)
sce_dim
ggsave("Dimplot_diff_resolution_low.pdf",width = 20,height = 12)
sce_dim <-plot_grid(ncol = 3, 
                    DimPlot(sce, reduction = "umap", group.by = "RNA_snn_res.0.5") + ggtitle("louvain_0.5"),
                    DimPlot(sce, reduction = "umap", group.by = "RNA_snn_res.0.8") +  ggtitle("louvain_0.8"), 
                    DimPlot(sce, reduction = "umap", group.by = "RNA_snn_res.1") + ggtitle("louvain_1"),
                    DimPlot(sce, reduction = "umap", group.by = "RNA_snn_res.1.5") + ggtitle("louvain_1.5"),
                    DimPlot(sce, reduction = "umap", group.by = "RNA_snn_res.2") + ggtitle("louvain_2"),
                    DimPlot(sce, reduction = "umap", group.by = "RNA_snn_res.3") +ggtitle("louvain_3")
)
sce_dim
ggsave(filename="Dimplot_diff_resolution_high.pdf",width = 20,height = 12)

library(clustree)
tree<-clustree(sce@meta.data, prefix = "RNA_snn_res.")
tree
ggsave(plot=tree, filename="Tree_diff_resolution.pdf",height = 20,width = 15)

#CCA####
DefaultAssay(sce) <- "RNA"
sce = FindVariableFeatures(sce,nfeatures = 500)
sce = ScaleData(sce
                #vars.to.regress = c("nFeature_RNA", "percent_mito")
)
sce = RunPCA(sce, npcs = 50)
sce = RunUMAP(sce, dims = 1:50)
DimPlot(sce,reduction = "umap",group.by = "patient_id") 
# define the expected number of doublet cells cells.
table(sce$patient_id)
sce.all=sce
sce.all
#拆分为 个seurat子对象
sce.all.list <- SplitObject(sce.all, split.by = "patient_id")
sce.all.list
for (i in 1:length(sce.all.list)) {
  print(i)
  sce.all.list[[i]] <- NormalizeData(sce.all.list[[i]], verbose = FALSE)
  sce.all.list[[i]] <- FindVariableFeatures(sce.all.list[[i]], selection.method = "vst", 
                                            nfeatures = 500, verbose = FALSE)
}
#features <- SelectIntegrationFeatures(object.list = sce.all.list,nfeatures = 500)
#耗时，1h~2h左右
alldata.anchors <- FindIntegrationAnchors(object.list = sce.all.list, dims = 1:30,
                                          anchor.features = 500,
                                          reduction = "cca")
# #这些放在linux上跑
save(alldata.anchors,file="anchors.Rdata")
library(Seurat)
library(ggplot2) 
library(stringr)
load("anchors.Rdata")
# memory.limit(10000000000000)
sce.all.int <- IntegrateData(anchorset = alldata.anchors, dims = 1:30, new.assay.name = "CCA")
save(sce.all.int,file="sce.all.int.Rdata")
###
#读取linux_CCA结果
load("sce.all.int.Rdata")
names(sce.all.int@assays)
#[1] "RNA" "CCA"
sce.all.int@active.assay
#[1] "CCA"
sce.all.int=ScaleData(sce.all.int)
sce.all.int=RunPCA(sce.all.int, npcs = 50)

##选择合适的pc


sce.all.int=RunTSNE(sce.all.int, dims = 1:30)
sce.all.int=RunUMAP(sce.all.int, dims = 1:30)
names(sce.all.int@reductions)
names(sce.all@reductions)
colnames(sce.all@meta.data) 
library(cowplot)
p1.compare=plot_grid(ncol = 2,
                     DimPlot(sce.all, reduction = "pca", group.by = "patient_id",raster=FALSE)+NoAxes()+ggtitle("PCA raw_data")+theme(aspect.ratio = 1),
                     #DimPlot(sce.all, reduction = "tsne", group.by = "patient_id")+NoAxes()+ggtitle("tSNE raw_data")+theme(aspect.ratio = 1),
                     DimPlot(sce.all, reduction = "umap", group.by = "patient_id",raster=FALSE)+NoAxes()+ggtitle("UMAP raw_data")+theme(aspect.ratio = 1),
                     
                     DimPlot(sce.all.int, reduction = "pca", group.by = "patient_id",raster=FALSE)+NoAxes()+ggtitle("PCA integrated")+theme(aspect.ratio = 1),
                     #DimPlot(sce.all.int, reduction = "tsne", group.by = "patient_id")+NoAxes()+ggtitle("tSNE integrated")+theme(aspect.ratio = 1),
                     DimPlot(sce.all.int, reduction = "umap", group.by = "patient_id",raster=FALSE)+NoAxes()+ggtitle("UMAP integrated")+theme(aspect.ratio = 1)
)
p1.compare
ggsave(plot=p1.compare,filename="Before&After_int.pdf",width = 18,height = 12)



#分cluster##
sce.all.int
sce.all
sce=sce.all.int
sce@active.assay
sce=FindNeighbors(sce, dims = 1:20#原本20
                  #k.param = 60, 
                  #prune.SNN = 1/15
)
#设置不同的分辨率，观察分群效果(选择哪一个？)
for (res in c(0.01, 0.05, 0.1, 0.2, 0.3, 0.5,0.8,1,1.5,2,3,4)) {
  sce=FindClusters(sce, graph.name = "CCA_snn", resolution = res, algorithm = 1)
}
apply(sce@meta.data[,grep("CCA_snn_res",colnames(sce@meta.data))],2,table)


p1_dim=plot_grid(ncol = 3, 
                 DimPlot(sce, reduction = "umap",group.by = "CCA_snn_res.0.01") + ggtitle("louvain_0.01")+theme(aspect.ratio = 1), 
                 DimPlot(sce, reduction = "umap", group.by = "CCA_snn_res.0.05") + ggtitle("louvain_0.05")+theme(aspect.ratio = 1), 
                 DimPlot(sce, reduction = "umap", group.by = "CCA_snn_res.0.1") + ggtitle("louvain_0.1")+theme(aspect.ratio = 1), 
                 DimPlot(sce, reduction = "umap", group.by = "CCA_snn_res.0.2") + ggtitle("louvain_0.2")+theme(aspect.ratio = 1), 
                 DimPlot(sce, reduction = "umap", group.by = "CCA_snn_res.0.3") + ggtitle("louvain_0.3")+theme(aspect.ratio = 1)
)
ggsave(plot=p1_dim, filename="Dimplot_diff_resolution_low.pdf",width = 18,height = 12)
p1_dim=plot_grid(ncol = 3, 
                 DimPlot(sce, reduction = "umap",group.by = "CCA_snn_res.0.5") + ggtitle("louvain_0.5")+theme(aspect.ratio = 1), 
                 DimPlot(sce, reduction = "umap", group.by = "CCA_snn_res.0.8") + ggtitle("louvain_0.8")+theme(aspect.ratio = 1), 
                 DimPlot(sce, reduction = "umap", group.by = "CCA_snn_res.1") + ggtitle("louvain_1")+theme(aspect.ratio = 1), 
                 DimPlot(sce, reduction = "umap", group.by = "CCA_snn_res.1.5") + ggtitle("louvain_1.5")+theme(aspect.ratio = 1), 
                 DimPlot(sce, reduction = "umap", group.by = "CCA_snn_res.2") + ggtitle("louvain_2")+theme(aspect.ratio = 1), 
                 DimPlot(sce, reduction = "umap", group.by = "CCA_snn_res.3") + ggtitle("louvain_3")+theme(aspect.ratio = 1)
)

ggsave(plot=p1_dim, filename="Dimplot_diff_resolution_high.pdf",width = 18,height = 12)
library(clustree)
#tree
tree=clustree(sce@meta.data, prefix = "CCA_snn_res.")
tree
ggsave(plot=tree, filename="Tree_diff_resolution.pdf",width = 12,height = 12)

#接下来分析，按照分辨率为0.3进行#### 
sel.clust = "CCA_snn_res.1"
sce <- SetIdent(sce, value = sel.clust)
sce@active.ident <- factor(sce@active.ident,levels = c(0:(length(table(sce@active.ident))-1)))
table(sce@active.ident) 
sce.markers <- FindAllMarkers(object = sce, only.pos = TRUE, min.pct = 0.25, 
                              thresh.use = 0.25)
write.csv(sce.markers,"sce.markers.csv")
library(dplyr) 
top5 <- sce.markers %>% group_by(cluster) %>% top_n(5, avg_log2FC)
DoHeatmap(sce,top5$gene,size=3)
genes_to_check =top5$gene
ggsave(filename=paste0(sel.clust,'_sce.markers_heatmap.pdf'),width =18,height = 12)

####检查常见分2群####
DimPlot(sce, reduction = "umap", group.by = "patient_id",label = T,raster=FALSE) +theme(aspect.ratio = 1)
ggsave('umap_by_patient_id.pdf',width = 6.5,height = 6)
DimPlot(sce, reduction = "umap", group.by = sel.clust,label = T,label = T,raster=FALSE) #用
ggsave('umap_by_CCA_snn_res.0.5.pdf',width = 7.6,height = 6)+theme(aspect.ratio = 1)
DimPlot(sce, reduction = "umap",split.by = 'patient_id',group.by = sel.clust,label = T) +theme(aspect.ratio = 1)
ggsave('umap_by_CCA_snn_res.0.5.pdf',width = 30,height = 6)

####总体定亚群####
options(stringsAsFactors = F)
library(patchwork)
library(Seurat)
library(ggplot2)
library(clustree)
library(cowplot)
library(dplyr)
library(ggplot2) 
library(stringr) 
library(ggplot2) 
####总体marker集合####
# 需要自行看图，定细胞亚群：
celltype=data.frame(ClusterID=0:(length(table(Idents(sce)))-1),celltype=0:(length(table(Idents(sce)))-1)) 
celltype[celltype$ClusterID %in% c(16,
                                   22,
                                   23,
                                   32
                                   
),2]='B_cell'
celltype[celltype$ClusterID %in% c(6,
                                   13,
                                   19,
                                   26
                                   
),2]='Malignancy_and_epi'
celltype[celltype$ClusterID %in% c(12,
                                   18,
                                   20
                                   
),2]='Endothelial'
celltype[celltype$ClusterID %in% c(14,
                                   15,
                                   33
                                   
),2]='Fibroblast'
# celltype[celltype$ClusterID %in% c(15
# 
# ),2]='Mast_cell'
celltype[celltype$ClusterID %in% c(5,
                                   7,
                                   8,
                                   10,
                                   11,
                                   25,
                                   27,
                                   28,
                                   29
                                   
),2]='Myeloid_cell' 
celltype[celltype$ClusterID %in% c(0,
                                   1,
                                   2,
                                   3,
                                   4,
                                   9,
                                   17,
                                   21,
                                   24,
                                   30,
                                   31,
                                   34
                                   
),2]='T/NK_cell'
# celltype[celltype$ClusterID %in% c(21
#                                    
# ),2]='Unknown'
head(celltype)
celltype
table(celltype$celltype)
sce@meta.data$celltype = "NA"
for(i in 1:nrow(celltype)){
  sce@meta.data[which(sce@active.ident == celltype$ClusterID[i]),'celltype'] <- celltype$celltype[i]}
table(sce@meta.data$celltype)
th=theme(axis.text.x = element_text(angle = 45, 
                                    vjust = 0.5, hjust=0.5)) 
genes_to_check = c("BANK1", "CD79B", 'CD79A','MS4A1',#B cell
                   'CDH5','CLDN5','VWF',"FCN3",#Endothelial
                   'COL1A1','ACTA2',"COL1A2","COL3A1",#fibroblast
                   'KRT19','KRT7','EPCAM',"ALB", #Malignancy and epi
                   #"TPSAB1","TPSB2","MS4A2","CPA3",  #MAST 
                   "HLA-DPB1","MS4A6A","LYZ","FTL",# myeloid CST3
                   'CD2', 'CD3D', 'CD3E',"CD69" #T cells
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltype' )+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("P1.pdf",width = 8.5,height =3)
table(sce$celltype)
#sce$celltype_CCA_0.3 <- sce$celltype
#细胞类型的tsne图
DimPlot(sce, reduction = "tsne", group.by = "celltype",label = T,raster=FALSE)+theme(aspect.ratio = 1) #用
ggsave("tsne_celltype.pdf",height = 6,width = 7.6)
DimPlot(sce, reduction = "umap", group.by = sel.clust,label = T,raster=FALSE) +theme(aspect.ratio = 1)#用
ggsave("P3.pdf",height = 6,width = 7.6)
DimPlot(sce, reduction = "umap", group.by = "celltype",raster=FALSE,
        label = T,cols = c("#244552","#25706B","#28968B","#88AC79","#E1BF6A","#EB9D62","#DA6C4F")) +theme(aspect.ratio = 1)#用
ggsave("P2.pdf",height = 6,width = 7.6)

DimPlot(sce, reduction = "umap", group.by = "celltype",raster=FALSE,split.by = "type",
        label = T,cols = c("#244552","#25706B","#28968B","#88AC79","#E1BF6A","#EB9D62","#DA6C4F")) +theme(aspect.ratio = 1)#用
ggsave("P2-2.pdf",height = 6,width = 18)
DimPlot(sce, reduction = "umap", group.by = "type",raster=FALSE) +theme(aspect.ratio = 1)#用
ggsave("P2-3.pdf",height = 6,width = 6)
DimPlot(sce, reduction = "umap", group.by = "patient_id",raster=FALSE) +theme(aspect.ratio = 1)#用
ggsave("P2-4.pdf",height = 6,width = 6)

#每个病人的分布图
DimPlot(sce, reduction = "umap", group.by = "patient_id",raster=FALSE)+theme(aspect.ratio = 1)
ggsave("umap_patient_id.pdf",height = 6,width = 7.8)
##需要查看每个病人的每种细胞的分布，发现可能不太对
table(sce@meta.data$patient_id,sce@meta.data$celltype)
###查看目的基因方法####
#查看一下目标基因,方法1
FeaturePlot(object = sce, features = c("SFN"),cols = c("grey","red"),reduction = "umap")+theme(aspect.ratio = 1)
DimPlot(sce, reduction = "umap", group.by = "celltype")+theme(aspect.ratio = 1)
DimPlot(sce, reduction = "umap", group.by = "celltype")+theme(aspect.ratio = 1)|FeaturePlot(object = sce, features = c("DTL"),cols = c("grey","red"),reduction = "umap")+theme(aspect.ratio = 1)
ggsave("SFN_expr_tsne.pdf",width = 14,height = 6)#
#查看一下目标基因,方法2
genes_to_check = c("BANK1", "CD79B", 'CD79A','MS4A1',#B cell
                   'CDH5','CLDN5','VWF',"FCN3",#Endothelial
                   'COL1A1','ACTA2',"COL1A2","COL3A1", #fibroblast
                   'KRT19','KRT7','EPCAM',"ALB", #Malignancy and epi
                   "HLA-DPB1","MS4A6A","LYZ","FTL",# monocyte CST3
                   'CD2', 'CD3D', 'CD3E',"CD69", #T cells
                   "SFN"#target gene
)
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltype' ,cols = c("#84BAB8", "#D2B452"))+th
ggsave("SFN_gene_expression.pdf",width = 12 ,height =4.5)#figure 1F
#featureplot####
DefaultAssay(sce) <- "RNA"
genes <- c("CD3E","LYZ","TPSB2","KRT19","ALB","ACTA2","CDH5","BANK1","GNLY","JCHAIN","MS4A1")
for(i in genes){
  FeaturePlot(sce, features = i,ncol = 1,raster=FALSE,
              cols = c("white" ,"red"),
              slot = "data",label.size = 6,pt.size = 0.1) + 
    theme(axis.line = element_blank(), 
          axis.text = element_blank(), 
          axis.ticks = element_blank(), 
          axis.title = element_blank(),
          aspect.ratio = 1
    ) + 
    guides(color=F)
  ggsave(paste0(i,"_featureplot.pdf"),width = 4,height = 4)
}

#查看每个基因在某个细胞群的表达情况，方法3
# add cell type
Idents(sce) <- sce$celltype
# get pc data
library(dplyr)
pc <- Embeddings(sce,reduction = 'tsne') %>% data.frame()
pc$celltype <- sce$celltype
pc$SFN <- FetchData(sce, vars = c("SFN")) %>% .$SFN
##主图
pmain <- ggplot(pc,aes(x = tSNE_1,y = tSNE_2,color = celltype)) +
  geom_point(size = 0.5) +
  # scale_color_npg(name = '') +
  scale_color_brewer(palette = 'Set3',name = '') +
  theme_bw(base_size = 14) +
  theme(panel.grid = element_blank(),
        plot.margin = margin(l = 10,r = 0,unit = 'pt'),
        aspect.ratio = 1)
pmain
ggsave("main.pdf",width = 6,height = 6)
##分图
pc2 <- pc[which(pc$celltype %in% c("Malignancy and epi")),]
psmall <- ggplot(pc2,aes(x = tSNE_1,y = tSNE_2)) +
  # scale_color_npg(name = '') +
  geom_point(aes(color = SFN),size = 0.1)+
  scale_color_gradient(high = "#D2B452", low ="#84BAB8")+
  theme_bw(base_size = 14) +
  #xlab('') + ylab('') +
  theme(panel.grid = element_blank(),
        axis.ticks = element_blank(),
        axis.text = element_blank(),
        strip.text = element_text(size = 10),
        plot.margin = margin(l = 0,r = 10,unit = 'pt'),
        strip.background = element_rect(colour = NA,fill = NA),
        aspect.ratio = 1
  )+
  labs(title = "SFN expression")+
  facet_wrap(~celltype,ncol = 3,strip.position = 'top')
psmall
ggsave("samll.pdf",width = 4,height = 4)

#查看目的基因的情况，李勇剑，程倩索查基因表达情况
genes_to_check = c('WWP1', 'GINS2', 'DTL', 'SFN',  #T cells
                   'ANKRD22','NAT14', #(NK) cells
                   'NAT10','HAT1','NDRG1','UBE2O',
                   'FUT1','FUT2','FUT3','FUT4','FUT6','FUT7','FUT8','FUT10','FUT11','POFUT1','POFUT2'
)
genes_to_check = c('FUT1','FUT2','FUT3','FUT4','FUT6','FUT7','FUT8','FUT10','FUT11','POFUT1','POFUT2')
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltype' ,cols = c("#84BAB8", "#D2B452"))+th

#每个群标记基因的表达情况
VlnPlot(sce, features = c("C1QA", "C1QB","C1QC"),group.by = sel.clust)
FeaturePlot(object = sce, features = c("WWP1", "UBE2O"),cols = c("blue", "red"),reduction = "tsne")
FeaturePlot(object = sce, features = c("HAT1", "NDRG1", "NAT14", "NAT10"),cols = c("blue", "red"),reduction = "tsne")
####
DotPlot(sce, features = genes_to_check, assay='RNA' ,group.by = 'celltype' ) +  coord_flip()+ scale_y_discrete(guide = guide_axis(n.dodge = 2)) +
  NULL
table(sce@meta.data$celltype,sce@meta.data$CCA_snn_res.0.5)

sce$celltype_CCA_0.5 <- sce$celltype
#接下来分析，按照分辨率为3进行 ####
sel.clust = "CCA_snn_res.3"
sce <- SetIdent(sce, value = sel.clust)
sce@active.ident <- factor(sce@active.ident,levels = c(0:(length(table(sce@active.ident))-1)))
table(sce@active.ident) 
sce.markers <- FindAllMarkers(object = sce, only.pos = TRUE, min.pct = 0.25, 
                              thresh.use = 0.25)
write.csv(sce.markers,"sce.markers.csv")
library(dplyr) 
top5 <- sce.markers %>% group_by(cluster) %>% top_n(5, avg_log2FC)
DoHeatmap(sce,top5$gene,size=3)
genes_to_check =top5$gene
ggsave(filename=paste0(sel.clust,'_sce.markers_heatmap.pdf'),width =18,height = 12)

####检查常见分2群####
DimPlot(sce, reduction = "umap", group.by = "patient_id",label = T) +theme(aspect.ratio = 1)
ggsave('umap_by_patient_id.pdf',width = 6.5,height = 6)
DimPlot(sce, reduction = "umap", group.by = sel.clust,label = T) #用
ggsave('umap_by_CCA_snn_res.3.pdf',width = 7.6,height = 6)+theme(aspect.ratio = 1)
DimPlot(sce, reduction = "umap",split.by = 'patient_id',group.by = sel.clust,label = T) +theme(aspect.ratio = 1)
ggsave('umap_by_CCA_snn_res.3.pdf',width = 30,height = 6)

####总体定亚群####
options(stringsAsFactors = F)
library(patchwork)
library(Seurat)
library(ggplot2)
library(clustree)
library(cowplot)
library(dplyr)
library(ggplot2) 
library(stringr) 
library(ggplot2) 
####总体marker集合####

# 需要自行看图，定细胞亚群：
celltype=data.frame(ClusterID=0:(length(table(Idents(sce)))-1),celltype=0:(length(table(Idents(sce)))-1)) 
celltype[celltype$ClusterID %in% c(17,
                                   35,
                                   53,
                                   56
                                   
),2]='B_cell'
celltype[celltype$ClusterID %in% c(16,
                                   22,
                                   26,
                                   28,
                                   33,
                                   34,
                                   36,
                                   40,
                                   41,
                                   45,
                                   49,
                                   52
                                   
),2]='Malignancy_and_epi'
celltype[celltype$ClusterID %in% c(24,
                                   37,
                                   43,
                                   46,
                                   50
                                   
),2]='Endothelial'
celltype[celltype$ClusterID %in% c(13,
                                   14,
                                   23,
                                   32,
                                   51,
                                   57
                                   
),2]='Fibroblast'
celltype[celltype$ClusterID %in% c(31
                                   
),2]='Mast_cell'
celltype[celltype$ClusterID %in% c(6,
                                   12,
                                   15,
                                   19,
                                   20,
                                   25,
                                   27,
                                   29,
                                   30,
                                   38,
                                   39,
                                   42,
                                   48,
                                   54,
                                   55
                                   
),2]='Myeloid_cell' 
celltype[celltype$ClusterID %in% c(0,
                                   1,
                                   2,
                                   3,
                                   4,
                                   5,
                                   7,
                                   8,
                                   9,
                                   10,
                                   11,
                                   18,
                                   21,
                                   44,
                                   47
                                   
),2]='T/NK_cell'
head(celltype)
celltype
table(celltype$celltype)
sce@meta.data$celltype = "NA"
for(i in 1:nrow(celltype)){
  sce@meta.data[which(sce@meta.data$CCA_snn_res.3 == celltype$ClusterID[i]),'celltype'] <- celltype$celltype[i]}
table(sce@meta.data$celltype)
th=theme(axis.text.x = element_text(angle = 45, 
                                    vjust = 0.5, hjust=0.5)) 
genes_to_check = c("BANK1", "CD79B", 'CD79A','MS4A1',#B cell
                   'CDH5','CLDN5','VWF',"FCN3",#Endothelial
                   'COL1A1','ACTA2',"COL1A2","COL3A1","ZFPM2", #fibroblast
                   'KRT19','KRT7','EPCAM',"ALB", #Malignancy and epi
                   "TPSAB1","TPSB2","MS4A2","CPA3",  #MAST 
                   "HLA-DPB1","MS4A6A","LYZ","FTL",# myeloid CST3
                   'CD2', 'CD3D', 'CD3E',"CD69" #T cells
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltype')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("markers_by_celltype_before_inferCNV.pdf",width = 8.5,height =3)
#细胞类型的降维图
DimPlot(sce, reduction = "tsne", group.by = "celltype",label = T)+theme(aspect.ratio = 1) 
ggsave("tsne_celltype.pdf",height = 6,width = 7.6)
DimPlot(sce, reduction = "umap", group.by = sel.clust,label = T) +theme(aspect.ratio = 1)
ggsave("umap_resolution.pdf",height = 6,width = 7.6)
DimPlot(sce, reduction = "umap", group.by = "celltype",label = T) +theme(aspect.ratio = 1)
ggsave("umap_celltype.pdf",height = 6,width = 7.6)
#每个病人的分布图
DimPlot(sce, reduction = "umap", group.by = "patient_id")+theme(aspect.ratio = 1)
ggsave("umap_patient_id.pdf",height = 6,width = 7.8)
##需要查看每个病人的每种细胞的分布，发现可能不太对
table(sce@meta.data$patient_id,sce@meta.data$celltype)
sce$celltype_CCA_3 <- sce$celltype

#各个细胞类型比例图####
Idents(sce) <- sce$celltype
table(sce$patient_id)#查看各组细胞数
prop.table(table(Idents(sce)))
table(Idents(sce), sce$patient_id)#各组不同细胞群细胞数
Cellratio <- prop.table(table(Idents(sce), sce$patient_id), margin = 2)#计算各组样本不同细胞群比例
Cellratio <- as.data.frame(Cellratio)
colnames(Cellratio)[1] <- "Cell_type"
allcolour=c("#244552","#25706B","#28968B","#88AC79","#E1BF6A","#EB9D62","#DA6C4F","#1E90FF","#7CFC00","#FFFF00",
            "#808000","#FF00FF","#FA8072","#7B68EE","#9400D3","#800080","#A0522D","#D2B48C","#D2691E","#87CEEB","#40E0D0","#5F9EA0",
            "#FF1493","#0000CD","#008B8B","#FFE4B5","#8A2BE2","#228B22","#E9967A","#4682B4","#32CD32","#F0E68C","#FFFFE0","#EE82EE",
            "#FF6347","#6A5ACD","#9932CC","#8B008B","#8B4513","#DEB887")
library(ggplot2)
ggplot(Cellratio) + 
  geom_bar(aes(x =Var2, y= Freq, fill = Cell_type),stat = "identity",width = 0.7,size = 0.5,colour = '#222222')+ 
  theme_classic() +
  labs(x='Sample',y = 'Ratio')+
  scale_fill_manual(values = allcolour)
#+theme(panel.border = element_rect(fill=NA,color="black", size=0.5, linetype="solid"))
ggsave("P4.pdf",width = 10,height = 4)

sce$celltype <- factor(sce$celltype,levels = c("B_cell","T/NK_cell","Myeloid_cell","Endothelial","Fibroblast","Malignancy_and_epi"))

#各个细胞类型比例图2####
Idents(sce) <- sce$celltype
table(sce$type)#查看各组细胞数
prop.table(table(Idents(sce)))
table(Idents(sce), sce$type)#各组不同细胞群细胞数
Cellratio <- prop.table(table(Idents(sce), sce$type), margin = 2)#计算各组样本不同细胞群比例
Cellratio <- as.data.frame(Cellratio)
colnames(Cellratio)[1] <- "Cell_type"
allcolour=c("#244552","#25706B","#28968B","#88AC79","#E1BF6A","#EB9D62","#DA6C4F","#1E90FF","#7CFC00","#FFFF00",
            "#808000","#FF00FF","#FA8072","#7B68EE","#9400D3","#800080","#A0522D","#D2B48C","#D2691E","#87CEEB","#40E0D0","#5F9EA0",
            "#FF1493","#0000CD","#008B8B","#FFE4B5","#8A2BE2","#228B22","#E9967A","#4682B4","#32CD32","#F0E68C","#FFFFE0","#EE82EE",
            "#FF6347","#6A5ACD","#9932CC","#8B008B","#8B4513","#DEB887")
library(ggplot2)
ggplot(Cellratio) + 
  geom_bar(aes(x =Var2, y= Freq, fill = Cell_type),stat = "identity",width = 0.7,size = 0.5,colour = '#222222')+ 
  theme_classic() +
  labs(x='Sample',y = 'Ratio')+
  scale_fill_manual(values = allcolour)
#+theme(panel.border = element_rect(fill=NA,color="black", size=0.5, linetype="solid"))
ggsave("P5.pdf",width = 4,height = 6)

#各个细胞类型比例图3####
#各type分组的细胞比例
df <- FetchData(sce, vars = c('celltype', 'type',"patient_id"))
table(df$type)#查看各组细胞数
table(df$patient_id)#查看各组细胞数
prop.table(table(df$celltype))
prop.table(table(df$type))
table(df$celltype, df$type)#各组不同细胞群细胞数
table(df$celltype, df$patient_id)
Cellratio <- prop.table(table(df$celltype,df$patient_id),margin = 2)#计算各组样本不同细胞群比例
Cellratio <- as.data.frame(Cellratio)
colnames(Cellratio) <- c('celltype',"patient_id","Freq")
#添加分组信息,手动添加
Cellratio$type <- ""
Cellratio$type <- substr(Cellratio$patient_id,5,5)
Cellratio$patient <- substr(Cellratio$patient_id,1,3)
# #添加分组信息,手动添加
# Cellratio$type <- ""
# Cellratio$type[which(Cellratio$patient_id %in% unique(df$patient_id[which(df$type =="low")]))] <- "low"
# Cellratio$type[which(Cellratio$patient_id %in% unique(df$patient_id[which(df$type =="high")]))] <- "high"
# table(Cellratio$type)
#方法一
ggplot(Cellratio, aes(x=type, y=Freq,color=type)) + 
  geom_jitter(width = 0.2, alpha = 0.5)+facet_wrap(~celltype)  
library(ggsci)
library(tidyr)
library(ggpubr)
#方法二 颜色改一下
Cellratio$type <- factor(Cellratio$type,levels=c("N","J","T"))#修改柱状图位置
class(Cellratio$type)
#按照J的免疫细胞的中位值
plot_order = Cellratio[Cellratio$type=="N",] %>% 
  group_by(celltype) %>% 
  summarise(m = median(Freq)) %>% 
  arrange(desc(m)) %>% 
  pull(celltype)

Cellratio$celltype = factor(Cellratio$celltype,levels = plot_order)
#出图
ggboxplot(Cellratio, x = "celltype", y = "Freq",
          fill = "type", palette = c("#2B9885","#DA6C4F","#E2BE6A"))+
  stat_compare_means(aes(group = type),
                     method = "wilcox.test",#"wilcox.test" 多组用，两组用t.test
                     label = "p.signif",
                     symnum.args=list(cutpoints = c(0, 0.001, 0.01, 0.05, 1),
                                      symbols = c("***", "**", "*", "")))
#ggsave("immune_prop_by_type.pdf",width = 6,height = 4)#用
allcolour=c("#2F89CA","#F2C31C","#DD1F4D","#FFA500","#9370DB",#1-5
            "#98FB98","#F08080","#1E90FF","#7CFC00","#FFFF00",#6-10
            "#808000","#FF00FF","#FA8072","#7B68EE","#9400D3",#11-15
            "#800080","#A0522D","#D2B48C","#D2691E","#87CEEB",#16-20
            "#40E0D0","#5F9EA0","#063A94","#0000CD","#008B8B",#21-25
            "#FFE4B5","#8A2BE2","#228B22","#E9967A","#4682B4",
            "#32CD32","#F0E68C","#FFFFE0","#EE82EE","#FF6347",
            "#6A5ACD","#9932CC","#8B008B","#8B4513","#DEB887")
#分面柱状图3##
my_comparisons = list( c("N", "J"),c("N", "T"),c("J", "T"))
ggplot(Cellratio, aes(x = type, y = Freq))+ 
  labs(y="Proportion",x= "Position",title = "Cell composition")+
  scale_colour_manual(name="", values =allcolour)+
  geom_boxplot(aes(color = type),position=position_dodge(0.5),size=0.4,
               outlier.alpha = 1, outlier.size = 0.5)+
  theme_bw() + 
  theme(panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank())+
  scale_y_continuous(labels = scales::percent
                     #limits = c(0, max(Cellratio$Freq)+0.1)
  )+#根据p值的范围调整
  geom_point(data = Cellratio, aes(x = type, y = Freq, fill=patient), #patient_id改成样本号
             size = 5, shape = 21,stroke = 0.5,alpha = 0.5)+
  facet_wrap(~ celltype,scales = "free",ncol = 4) + 
  stat_compare_means(aes(group = type),comparisons = my_comparisons,
                     method = "wilcox.test",#"wilcox.test" 多组用，两组用t.test
                     #ref.group = "HCC",
                     size = 5,
                     hide.ns =T,
                     label = "p.signif",
                     #label.y=max(Cellratio$Freq),
                     #label.x = 1.5,#两个名称之间
                     symnum.args=list(cutpoints = c(0, 0.001, 0.01, 0.05, 1),
                                      symbols = c("***", "**", "*", "")
                     )
  )
#ggsave(paste0(name,"_immune_prop_by_type2.pdf"),width = 8,height = 4)#用


allcolour=c("#1CB4B8","#F2C31C","#DD1F4D","#FFA500","#9370DB",#1-5
            "#98FB98","#F08080","#1E90FF","#7CFC00","#FFFF00",#6-10
            "#808000","#FF00FF","#FA8072","#7B68EE","#9400D3",#11-15
            "#800080","#A0522D","#D2B48C","#D2691E","#87CEEB",#16-20
            "#40E0D0","#5F9EA0","#063A94","#0000CD","#008B8B",#21-25
            "#FFE4B5","#8A2BE2","#228B22","#E9967A","#4682B4",
            "#32CD32","#F0E68C","#FFFFE0","#EE82EE","#FF6347",
            "#6A5ACD","#9932CC","#8B008B","#8B4513","#DEB887")
my_comparisons = list( c("N", "J"),c("N", "T"),c("J", "T"))
ggboxplot(Cellratio, x = "type", y = "Freq",
          fill = "type", palette = allcolour)+
  theme(legend.position="right", panel.border = element_rect(color = "black",  fill = NA))+
  facet_wrap(~ celltype,scales = "free",ncol = 8) + 
  geom_point(data = Cellratio, aes(x = type, 
                                   y = Freq, 
                                   color = patient), #patient_id改成样本号
             size = 6, 
             shape = 21,
             stroke = 0.5,alpha = 0.5)+
  stat_compare_means(comparisons = my_comparisons,
                     method = "wilcox.test",#"wilcox.test" 多组用，两组用t.test
                     label = "p.signif",
                     symnum.args=list(cutpoints = c(0, 0.001, 0.01, 0.05, 1),
                                      symbols = c("***", "**", "*", "")))+ggtitle("Cell type")+
  theme(plot.title = element_text(hjust = 0.5))
ggsave("allcell_prop_by_type2.pdf",width = 9,height = 3)#用


#单个画图#
table(Cellratio$celltype)
Cellratio <- Cellratio[which(Cellratio$celltype =="SPP1+_Macro"),]
my_comparisons = list( c("N", "J"),c("N", "T"),c("J", "T"))
ggboxplot(Cellratio, x = "type", y = "Freq",
          fill = "type", palette = allcolour)+
  theme(legend.position="right")+
  geom_point(data = Cellratio, aes(x = type, 
                                   y = Freq, 
                                   color = patient), #patient_id改成样本号
             size = 6, 
             shape = 21,
             stroke = 0.5,alpha = 0.5)+
  stat_compare_means(comparisons = my_comparisons,
                     method = "wilcox.test",#"wilcox.test" 多组用，两组用t.test
                     label = "p.signif",
                     symnum.args=list(cutpoints = c(0, 0.001, 0.01, 0.05, 1),
                                      symbols = c("***", "**", "*", "ns")))+ggtitle("SPP1+_Macro")+
  theme(plot.title = element_text(hjust = 0.5))
ggsave("immune_prop_by_type.pdf",width = 6,height = 4)#用

#各细胞比例图3
library(RColorBrewer)
Idents(sce) <- sce$celltype
dat1 <- as.data.frame(table(Idents(sce)))
dat2 <- as.data.frame(prop.table(table(Idents(sce))))
dat <- merge(dat1,dat2,by="Var1")
myLabel = paste(dat$Var1, "(", round(dat$Freq.y / 1, 3)*100, "%)", sep = "") 
myPalette <- brewer.pal(13, "Set2") 
pdf("Global.pdf",height = 6,width = 6)
pie(dat$Freq.x , labels = myLabel, border="white", col=myPalette )#用
dev.off()
table(sce$orig.ident)
# 特殊亚群处理####
DimPlot(sce, reduction = "umap", group.by = "CCA_snn_res.3",split.by = "CCA_snn_res.3",ncol = 10)+theme(aspect.ratio = 1)
p <- DimPlot(sce, reduction = "umap", group.by = sel.clust,label = T) +theme(aspect.ratio = 1)
data <- p$data
sce$test<- sce$CCA_snn_res.3
table(sce$test)
sce$test <- as.character(sce$test)
sce$test[which(colnames(sce) %in% rownames(data)[which( data$UMAP_2>5 & data$CCA_snn_res.3 %in% c(30) ) ])] <- "30.1"
sce$test[which(colnames(sce) %in% rownames(data)[which( data$UMAP_2<5 & data$CCA_snn_res.3 %in% c(30)) ])] <- "30.2"
table(sce$test)
Idents(sce) <- "test"
table(sce@active.ident)
sce$celltype[which(colnames(sce) %in% rownames(data)[which( data$UMAP_2>5 & data$CCA_snn_res.3 %in% c(30) ) ])] <- "Myeloid_cell"
sce$celltype[which(colnames(sce) %in% rownames(data)[which( data$UMAP_2<5 & data$CCA_snn_res.3 %in% c(30)) ])] <- "T/NK_cell"


###查看细胞类型之间的相关性
#library(Seurat)
library(pheatmap)
Idents(sce)<- sce$celltype
av.exp<- AverageExpression(sce)$RNA
# av.exp<- av.exp[which(row.names(av.exp)%in% features),]
features=names(tail(sort(apply(av.exp, 1, sd)),length(rownames(sce))))
av.exp<- av.exp[which(row.names(av.exp)%in% features),]
av.exp <- cor(av.exp, method= "spearman")
pheatmap::pheatmap(av.exp,color = colorRampPalette(c("navy", "white", "firebrick3"))(50))

pheatmap::pheatmap(av.exp,color = colorRampPalette(c("#040206","#201B3F","#5A2766","#A64056","#CD663A","#DA8B3B","#EFEAAB"))(50))
pheatmap::pheatmap(av.exp,color = colorRampPalette(c("#1D2C6C", "#1C4A9E", "#34A2DC","#78C5AB","#C8DB49","#F3F900","#E72318"))(50))







#各位置比例图比较,批量饼图####
dat1 <- as.data.frame(table(Idents(sce), sce$orig.ident))#orig.ident可以换成type和patient_id
dat2 <- as.data.frame(prop.table(table(Idents(sce), sce$orig.ident), margin = 2))
dat <- cbind(dat1,dat2)
dat <- dat[,-c(2,4)]
#修改变量名称
colnames(dat) <- c("celltype","Freq","group","proportion")
dat$myLabel = paste(dat$celltype, "(", round(dat$proportion / 1, 3)*100, "%)", sep = "") 
myPalette <- brewer.pal(13, "Set2")
for (i in unique(dat$group)){
  dat_used <- dat %>% filter(group==i)
  pdf(paste0(i,"_pie.pdf"),height = 6,width = 6)
  pie(dat_used$Freq , labels =dat_used$myLabel, border="white", col=myPalette,main=i)#用
  dev.off()
}

##单细胞组合图#####
#提取meta信息
dat <- FetchData(sce, vars = c('orig.ident', 'celltype','type','patient_id'))
table(dat$type)#查看各组细胞数
table(dat$patient_id)#查看各组细胞数
table(dat$celltype)
prop.table(table(dat$celltype))
prop.table(table(dat$type))
table(dat$celltype, dat$type)#各组不同细胞群细胞数
table(dat$celltype, dat$patient_id)
#计算各组样本不同细胞群比例
Cellratio1 <- as.data.frame(prop.table(table(dat$celltype,dat$type),margin = 2))
Cellratio1$Var3 <- "type"
Cellratio2 <- as.data.frame(prop.table(table(dat$celltype,dat$orig.ident),margin = 2))
Cellratio2$Var3 <- "orig.ident"
Cellratio3 <- as.data.frame(prop.table(table(dat$celltype,dat$patient_id),margin = 2))#计算各组样本不同细胞群比例
Cellratio3$Var3 <- "patient_id"

Cellratio <- rbind(Cellratio1,Cellratio2,Cellratio3)
colnames(Cellratio) <- c('celltype',"var","Freq","var2")
#画气泡图
#part1
ggplot(Cellratio,aes(x = var,
                     y= celltype,
                     size = Freq)) +
  scale_discrete_manual(values=allcolour,aesthetics = 'colour')+
  geom_point(aes(color = celltype),alpha = 1)+
  scale_size(range = c(0,5)) +
  labs(title = "Over view of this study",
       subtitle = "Myeloid",
       # x = "Markers of immunal genes",
       y="Cell_type",
       size="Cell Proportion")+
  theme_bw()+
  theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),text = element_text(size=10),
        axis.text.x = element_text(angle=90, hjust=1))+
  geom_vline(xintercept=c(3.5,9.5), cex=0.5)
ggsave("part1.pdf",height = 2.5,width = 7)
#画柱状图part2
table(dat$type,dat$celltype)#查看各组细胞数
table(dat$patient_id)#查看各组细胞数
table(dat$orig.ident)
dat1 <- as.data.frame(table(dat$type,dat$celltype))
dat2 <- as.data.frame(table(dat$orig.ident,dat$celltype))
dat3 <- as.data.frame(table(dat$patient_id,dat$celltype))
dat4 <-rbind(dat1,dat2,dat3)
#画图测试
allcolour=c("#DC143C","#0000FF","#20B2AA","#FFA500","#9370DB","#98FB98","#F08080","#1E90FF","#7CFC00","#FFFF00",
            "#808000","#FF00FF","#FA8072","#7B68EE","#9400D3","#800080","#A0522D","#D2B48C","#D2691E","#87CEEB","#40E0D0","#5F9EA0",
            "#FF1493","#0000CD","#008B8B","#FFE4B5","#8A2BE2","#228B22","#E9967A","#4682B4","#32CD32","#F0E68C","#FFFFE0","#EE82EE",
            "#FF6347","#6A5ACD","#9932CC","#8B008B","#8B4513","#DEB887")
library(ggplot2)
ggplot(dat4) + 
  geom_bar(aes(x =Var1, y= Freq, fill = Var2),stat = "identity",width = 0.7,size = 0.5,colour = '#222222')+ 
  theme_classic() +
  labs(x='Sample',y = 'Ratio')+
  scale_fill_manual(values = allcolour)+
  geom_vline(xintercept=c(3.5,9.5), cex=0.5)
#+theme(panel.border = element_rect(fill=NA,color="black", size=0.5, linetype="solid"))
ggsave("part2.pdf",height = 3,width = 7)
#part3
#画柱状图part2
table(dat$type,dat$celltype)#查看各组细胞数
table(dat$patient_id)#查看各组细胞数
table(dat$orig.ident)
dat1 <- as.data.frame(table(dat$type,dat$celltype))
dat2 <- as.data.frame(table(dat$orig.ident,dat$celltype))
dat3 <- as.data.frame(table(dat$patient_id,dat$celltype))
dat4 <-rbind(dat1,dat2,dat3)

dat1 <- as.data.frame(table(dat$type,dat$celltype))
#画图测试
allcolour=c("#DC143C","#0000FF","#20B2AA","#FFA500","#9370DB","#98FB98","#F08080","#1E90FF","#7CFC00","#FFFF00",
            "#808000","#FF00FF","#FA8072","#7B68EE","#9400D3","#800080","#A0522D","#D2B48C","#D2691E","#87CEEB","#40E0D0","#5F9EA0",
            "#FF1493","#0000CD","#008B8B","#FFE4B5","#8A2BE2","#228B22","#E9967A","#4682B4","#32CD32","#F0E68C","#FFFFE0","#EE82EE",
            "#FF6347","#6A5ACD","#9932CC","#8B008B","#8B4513","#DEB887")
library(ggplot2)
ggplot(dat1) + 
  geom_bar(aes(x =Freq, y= Var2,fill=Var2),stat = "identity",width = 0.7,size = 0.5,colour = '#222222')+ 
  theme_classic() +
  labs(x='Sample',y = 'Ratio')+
  scale_fill_manual(values = allcolour)+
  geom_vline(xintercept=c(3.5,6.5), cex=0.5)
#+theme(panel.border = element_rect(fill=NA,color="black", size=0.5, linetype="solid"))
ggsave("part3.pdf",height = 3,width = 7)
#置于AI上进行再加工




#把epi映射到大队列中去####
table(sce@meta.data$celltype)
sce$scelltype <- sce$celltype
sce$scelltype[match(colnames(episce),colnames(sce))]<-episce$celltype%>%as.character()
table(sce$scelltype)
table(sce$celltype)
#免疫细胞亚群映射到大队列中去
table(sce@meta.data$celltype)
sce$scelltype <- sce$celltype
sce$scelltype[match(colnames(isce),colnames(sce))]<-isce$celltype%>%as.character()
table(sce$scelltype)
table(sce$celltype)

#细胞类型的tsne图
DimPlot(sce, reduction = "tsne", group.by = "scelltype",label = T)+theme(aspect.ratio = 1) #用
ggsave("tsne_scelltype.pdf",height = 6,width = 7.6)
DimPlot(sce, reduction = "umap", group.by = sel.clust,label = T) +theme(aspect.ratio = 1)#用
ggsave("umap_resolution.pdf",height = 6,width = 7.6)
DimPlot(sce, reduction = "umap", group.by = "scelltype",label = T) +theme(aspect.ratio = 1)#用
ggsave("tsne_scelltype.pdf",height = 6,width = 7.6)

#提取肿瘤细胞，增值肿瘤细胞细胞，成纤维细胞做差异基因分析用于addmodule分析#####
table(sce$scelltype)
Idents(sce) <- "scelltype"
fsce <- subset(sce, cells = colnames(sce)[which(sce$scelltype %in% c("Proliferating_tumor_cell","Tumor_cell","Fibroblast","Endothelial"))])
fsce.markers <- FindAllMarkers(object = fsce, only.pos = TRUE, min.pct = 0.25, 
                               thresh.use = 0.25)
write.csv(fsce.markers,"Sig.markers.csv")
#LGALS9####
genes_to_check = c("LGALS9","CSF1","CSF1R"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("LGALS9__by_celltype.pdf",width = 8.5,height =3)


VlnPlot(sce, features = c("LGALS9"),group.by = "celltypedb",pt.size = 0)
ggsave("LGALS9.pdf",width = 12,height =3)
#NECTIN2####
genes_to_check = c("NECTIN2"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'type',cols = c("white", "red"))+coord_flip()+th
#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("NECTIN2_markers_by_celltype.pdf",width = 8.5,height =3)


VlnPlot(sce, features = c("NECTIN2"),group.by = "celltypedb",pt.size = 0)
ggsave("NECTIN2.pdf",width = 12,height =3)
#TIGIT####
genes_to_check = c("TIGIT"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'type',cols = c("white", "red"))+coord_flip()+th
#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("TIGIT_markers_by_celltype.pdf",width = 8.5,height =3)


VlnPlot(sce, features = c("TIGIT"),group.by = "celltypedb",pt.size = 0)
ggsave("TIGIT.pdf",width = 12,height =3)

#EGFR####
genes_to_check = c("EGFR"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("EGFR_markers_by_celltype.pdf",width = 8,height =8)


VlnPlot(sce, features = c("EGFR"),group.by = "celltypedb",pt.size = 0)
ggsave("EGFR.pdf",width = 12,height =3)


#AREG####
genes_to_check = c("AREG"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("AREG_markers_by_celltype.pdf",width = 8,height =8)


VlnPlot(sce, features = c("AREG"),group.by = "celltypedb",pt.size = 0)
ggsave("AREG.pdf",width = 12,height =3)

#NECTIN2####
genes_to_check = c("NECTIN2"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("NECTIN2_markers_by_celltype.pdf",width = 8,height =8)


VlnPlot(sce, features = c("NECTIN2"),group.by = "celltypedb",pt.size = 0)
ggsave("NECTIN2.pdf",width = 12,height =3)

#TIGIT####
genes_to_check = c("TIGIT"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("TIGIT_markers_by_celltype.pdf",width = 8,height =8)


VlnPlot(sce, features = c("TIGIT"),group.by = "celltypedb",pt.size = 0)
ggsave("TIGIT.pdf",width = 12,height =3)

#NAMPT####
genes_to_check = c("NAMPT"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("NAMPT_markers_by_celltype.pdf",width = 8,height =8)


VlnPlot(sce, features = c("NAMPT"),group.by = "celltypedb",pt.size = 0)
ggsave("NAMPT.pdf",width = 12,height =3)

#INSR####
genes_to_check = c("INSR"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("INSR_markers_by_celltype.pdf",width = 8,height =8)


VlnPlot(sce, features = c("INSR"),group.by = "celltypedb",pt.size = 0)
ggsave("INSR.pdf",width = 12,height =3) 

#CD48####
genes_to_check = c("CD48"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("CD48_markers_by_celltype.pdf",width = 8,height =8)


VlnPlot(sce, features = c("CD48"),group.by = "celltypedb",pt.size = 0)
ggsave("CD48.pdf",width = 12,height =3)

#TGFA####
genes_to_check = c("TGFA"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("TGFA_markers_by_celltype.pdf",width = 8,height =8)


VlnPlot(sce, features = c("TGFA"),group.by = "celltypedb",pt.size = 0)
ggsave("TGFA.pdf",width = 12,height =3)


#CD244####
genes_to_check = c("CD244"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("CD244_markers_by_celltype.pdf",width = 8,height =8)


VlnPlot(sce, features = c("CD244"),group.by = "celltypedb",pt.size = 0)
ggsave("CD244.pdf",width = 12,height =3)
#IFNG####
genes_to_check = c("IFNG"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("IFNG_markers_by_celltype.pdf",width = 8,height =8)


VlnPlot(sce, features = c("IFNG"),group.by = "celltypedb",pt.size = 0)
ggsave("IFNG.pdf",width = 12,height =3)
# CCL21####
genes_to_check = c("CCL21"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("CCL21_markers_by_celltype.pdf",width = 8,height =8)

VlnPlot(sce, features = c("CCL21"),group.by = "celltypedb",pt.size = 0)
ggsave("CCL21.pdf",width = 12,height =3)
# CXCR3####
genes_to_check = c("CXCR3"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("CXCR3_markers_by_celltype.pdf",width = 8,height =8)

VlnPlot(sce, features = c("CXCR3"),group.by = "celltypedb",pt.size = 0)
ggsave("CXCR3.pdf",width = 12,height =3)
# CXCL9####
genes_to_check = c("CXCL9"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("CXCL9_markers_by_celltype.pdf",width = 8,height =8)

VlnPlot(sce, features = c("CXCL9"),group.by = "celltypedb",pt.size = 0)
ggsave("CXCL9.pdf",width = 12,height =3)


# CCL19####
genes_to_check = c("CCL19"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("CCL19_markers_by_celltype.pdf",width = 8,height =8)

VlnPlot(sce, features = c("CCL19"),group.by = "celltypedb",pt.size = 0)
ggsave("CCL19.pdf",width = 12,height =3)
#NECTIN2####
genes_to_check = c("TIGIT","NECTIN2","NECTIN3","SIRPA","CD47"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)+th
ggsave("NECTIN2_by_celltype.pdf",width = 5,height =6)
VlnPlot(sce, features = c("NECTIN2"),group.by = "celltypedb",pt.size = 0)
ggsave("NECTIN2.pdf",width = 12,height =3)
# cytokine####
genes_to_check = c("CCL3","CCL4","CCL5","CCL7","CCL8","CCL13","CCL14","CCL15","CCL16","CCL23","CCR1",
                   "CCL2","CCL7","CCL13","CCL16","CCR2",
                   "CCL4","CCL5","CCL7","CCL8","CCL11","CCL13","CCL15","CCL16","CCL23","CCL24","CCL26","CCL28","CCR3",
                   "CCL3","CCL5","CCL17","CCL22","CCR4",
                   "CCL2","CCL3","CCL4","CCL5","CCL8","CCL11","CCL13","CCL14","CCL16","CCR5",
                   "CCL20","CCR6",
                   "CCL19","CCL21","CCR7",
                   "CCL1","CCL4","CCL16","CCL17","CCL18","CCR8",
                   "CCL25","CCR9",
                   "CCL27","CCL28","CCR10",
                   "CXCL1","CXCL6","CXCL7","CXCL8","CXCL1","CXCL2","CXCL3","CXCL5","CXCL6","CXCL7","CXCL8","CXCR2",
                   "CXCL4","CXCL9","CXCL10","CXCL11","CXCL13","CXCR3",
                   "CXCL12","CXCR4","CXCL13","CXCR5","CXCL16","CXCR6","CXCL11","CXCL12","CXCR7","XCL1","XCL2","XCR1","CX3CL1","CX3R1"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("cytokine_circle__by_celltype.pdf",width = 14,height =10)
# CXCR6####
genes_to_check = c("CXCL12","CXCR4","CXCL13","CXCR5","CXCL16","CXCR6",
                   "CXCL11","CXCL12","CXCR7",
                   "XCL1","XCL2","XCR1","CX3CL1","CX3R1"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("CXCR6_circle__by_celltype.pdf",width = 9,height =12)

# mregDC####
genes_to_check = c("CXCL16","CXCL10","CXCL9","ICOSLG","IL15RA","IL15","IL12B","PVRL2","PVR","CD86","CD80","CD274","PDCD1LG2","EBI3","CCL17","CCL22","CCL19","XCL1","IFNG","LTB","CD40LG","CXCL13","IL21","CH25H"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("mregDC_circle__by_celltype.pdf",width = 9,height =12)
# cytokine####
genes_to_check = c("CCL3","CCL4","CCL5","CCL7","CCL8","CCL13","CCL14","CCL15","CCL16","CCL23","CCR1",
                   "CCL2","CCL7","CCL13","CCL16","CCR2",
                   "CCL4","CCL5","CCL7","CCL8","CCL11","CCL13","CCL15","CCL16","CCL23","CCL24","CCL26","CCL28","CCR3",
                   "CCL3","CCL5","CCL17","CCL22","CCR4",
                   "CCL2","CCL3","CCL4","CCL5","CCL8","CCL11","CCL13","CCL14","CCL16","CCR5",
                   "CCL20","CCR6",
                   "CCL19","CCL21","CCR7",
                   "CCL1","CCL4","CCL8","CCL16","CCL17","CCL18","CCR8",
                   "CCL25","CCR9",
                   "CCL27","CCL28","CCR10",
                   "CXCL1","CXCL6","CXCL7","CXCL8","CXCL1","CXCL2","CXCL3","CXCL5","CXCL6","CXCL7","CXCL8","CXCR2",
                   "CXCL4","CXCL9","CXCL10","CXCL11","CXCL13","CXCR3",
                   "CXCL12","CXCR4","CXCL13","CXCR5","CXCL16","CXCR6","CXCL11","CXCL12","CXCR7","XCL1","XCL2","XCR1","CX3CL1","CX3R1"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("cytokine_circle__by_celltype.pdf",width = 15,height =12)
# mregDC####
genes_to_check = c("CXCL16","CXCL10","CXCL9","ICOSLG","IL15RA","IL15","IL12B","PVRL2","PVR","CD86","CD80","CD274","PDCD1LG2","EBI3","CCL17","CCL22","CCL19","XCL1","IFNG","LTB","CD40LG","CXCL13","IL21","CH25H"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("mregDC_circle__by_celltype.pdf",width = 9,height =12)

# mregDC2####
genes_to_check = c("GPR183","IL21R",
                   "CXCR5","CD40","LTBR",
                   "IFNGR1","IFNGR2","XCR1","CCR7", "CCR4",
                   "IL6ST","PDCD1","CTLA4","CD28","TIGIT","CD226",
                   "CD96","PVRIG","IL12RB1","IL2RB","ICOS","CXCR3","CXCR6"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("mregDC2_circle__by_celltype.pdf",width = 9,height =12)

# CCR1####
genes_to_check = c("CCL3","CCL4","CCL5","CCL7","CCL8","CCL13","CCL14","CCL15","CCL16","CCL23","CCR1"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("CCR1_cytokine_circle__by_celltype.pdf",width = 8,height =12)
# CCR2####
genes_to_check = c("CCL2","CCL7","CCL13","CCL16","CCR2"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("CCR2_cytokine_circle__by_celltype.pdf",width = 6,height =12)
# CCR3####
genes_to_check = c("CCL4","CCL5","CCL7","CCL8","CCL11","CCL13","CCL15","CCL16","CCL23","CCL24","CCL26","CCL28","CCR3"
                   
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("CCR3_cytokine_circle__by_celltype.pdf",width = 8,height =12)
# CCR4####
genes_to_check = c("CCL3","CCL5","CCL17","CCL22","CCR4"
                   
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("CCR4_cytokine_circle__by_celltype.pdf",width = 8,height =12)
# CCR5####
genes_to_check = c("CCL2","CCL3","CCL4","CCL5","CCL8","CCL11","CCL13","CCL14","CCL16","CCR5"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("CCR5_cytokine_circle__by_celltype.pdf",width = 8,height =12)
# CCR67####
genes_to_check = c("CCL20","CCR6",
                   "CCL19","CCL21","CCR7"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("CCR67_cytokine_circle__by_celltype.pdf",width = 6,height =12)
# CCR8910####
genes_to_check = c(
  "CCL1","CCL4","CCL8","CCL16","CCL17","CCL18","CCR8",
  "CCL25","CCR9",
  "CCL27","CCL28","CCR10"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("CCR8910_cytokine_circle__by_celltype.pdf",width = 8,height =12)
# CXCR2####
genes_to_check = c(
  "CXCL1","CXCL6","CXCL7","CXCL8","CXCL1","CXCL2","CXCL3","CXCL5","CXCL6","CXCL7","CXCL8","CXCR2"
  
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("CXCR2_cytokine_circle__by_celltype.pdf",width = 8,height =12)

#EGFR####
genes_to_check = c("EGFR"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("EGFR_markers_by_celltype.pdf",width = 8,height =8)


VlnPlot(sce, features = c("EGFR"),group.by = "celltypedb",pt.size = 0)
ggsave("EGFR.pdf",width = 12,height =3)



# TNF####
genes_to_check = c("TNF"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("TNF_markers_by_celltype.pdf",width = 8,height =8)

VlnPlot(sce, features = c("TNF"),group.by = "celltypedb",pt.size = 0)
ggsave("TNF.pdf",width = 12,height =3)


#Deg_type####
Idents(sce) <- "type"
table(sce@active.ident) 
sce.markers <- FindAllMarkers(object = sce, only.pos = TRUE, min.pct = 0.01, 
                              thresh.use = 0.1)
write.csv(sce.markers,"Deg_type.csv")

#Deg_celltypedb####
Idents(sce) <- "celltypedb"
table(sce@active.ident) 
sce.markers <- FindAllMarkers(object = sce, only.pos = TRUE, min.pct = 0.01, 
                              thresh.use = 0.1)
write.csv(sce.markers,"Deg_celltypedb.csv")

#cytocine####
genes_to_check = c("CCL5","CXCL12","CCL8","CXCL8","CXCR4","CCL19","CCL21"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("cytocine_by_celltype.pdf",width = 5,height =6)
VlnPlot(sce, features = c("CCL5"),group.by = "celltypedb",pt.size = 0)
ggsave("cytocine.pdf",width = 12,height =3)

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='type')+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("cytocine_by_type.pdf",width = 5,height =6)
VlnPlot(sce, features = c("CCL5"),group.by = "celltypedb",pt.size = 0)
ggsave("cytocine.pdf",width = 12,height =3)

#CCL19####
genes_to_check = c("CCL19"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("CCL19_by_celltype.pdf",width = 5,height =6)
VlnPlot(sce, features = c("CCL19"),group.by = "celltypedb",pt.size = 0)
ggsave("CCL19.pdf",width = 12,height =3)

# CXCR3####
genes_to_check = c("CXCL4","CXCL9","CXCL10","CXCL11","CXCL13","CXCR3"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("CXCR3_cytokine_circle__by_celltype.pdf",width = 7,height =12)

#TGFB1####
genes_to_check = c("TGFBR1","TGFBR2","TGFB1"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+theme(axis.text.x = element_text(angle = 90)) 

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)+theme(axis.text.x = element_text(angle = 90)) 
ggsave("TGFB1_by_celltype.pdf",width = 6,height =10)
VlnPlot(sce, features = c("TGFB1"),group.by = "celltypedb",pt.size = 0)
ggsave("TGFB1.pdf",width = 12,height =3)


#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='type')+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("TGFB1_by_type.pdf",width = 5,height =6)
VlnPlot(sce, features = c("TGFB1"),group.by = "celltypedb",pt.size = 0)
ggsave("TGFB1.pdf",width = 12,height =3)

#CCL21####
genes_to_check = c(#"CCL21","CCL4","CCL3",
                   "CCR5","CCR8"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+theme(axis.text.x = element_text(angle = 90)) 
#CCL19####
genes_to_check = c("IFNG"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+theme(axis.text.x = element_text(angle = 90)) 

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("IFNG_by_celltype.pdf",width = 5,height =6)
VlnPlot(sce, features = c("CCL19"),group.by = "celltypedb",pt.size = 0)
ggsave("IFNG.pdf",width = 12,height =3)

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("CCL21_by_celltype.pdf",width = 5,height =6)
VlnPlot(sce, features = c("CCL21"),group.by = "celltypedb",pt.size = 0)
ggsave("CCL21.pdf",width = 12,height =3)


#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='type')+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("CCL21_by_type.pdf",width = 5,height =6)
VlnPlot(sce, features = c("CCL21"),group.by = "celltypedb",pt.size = 0)
ggsave("CCL21.pdf",width = 12,height =3)


#ITGA1####
genes_to_check <- c("ITGA1", "ITGA2", "ITGA3", "ITGA5", "ITGA6", "ITGA7", "ITGA8", "ITGA9")

DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("CXCR3_cytokine_circle__by_celltype.pdf",width = 7,height =12)



#接下来分析，按照分辨率为1.5进行#### 
sel.clust = "CCA_snn_res.1.5"
sce <- SetIdent(sce, value = sel.clust)
sce@active.ident <- factor(sce@active.ident,levels = c(0:(length(table(sce@active.ident))-1)))
table(sce@active.ident) 
sce.markers <- FindAllMarkers(object = sce, only.pos = TRUE, min.pct = 0.25, 
                              thresh.use = 0.25)
write.csv(sce.markers,"sce.markers.csv")
library(dplyr) 
top5 <- sce.markers %>% group_by(cluster) %>% top_n(5, avg_log2FC)
DoHeatmap(sce,top5$gene,size=3)
genes_to_check =top5$gene
ggsave(filename=paste0(sel.clust,'_sce.markers_heatmap.pdf'),width =18,height = 12)

#检查常见分2群#
DimPlot(sce, reduction = "umap", group.by = "patient_id",label = T,raster=FALSE) +theme(aspect.ratio = 1)
ggsave('umap_by_patient_id.pdf',width = 6.5,height = 6)
DimPlot(sce, reduction = "umap", group.by = sel.clust,label = T,label = T,raster=FALSE) #用
ggsave('umap_by_CCA_snn_res.0.5.pdf',width = 7.6,height = 6)+theme(aspect.ratio = 1)
DimPlot(sce, reduction = "umap",split.by = 'patient_id',group.by = sel.clust,label = T) +theme(aspect.ratio = 1)
ggsave('umap_by_CCA_snn_res.0.5.pdf',width = 30,height = 6)

#总体定亚群#
options(stringsAsFactors = F)
library(patchwork)
library(Seurat)
library(ggplot2)
library(clustree)
library(cowplot)
library(dplyr)
library(ggplot2) 
library(stringr) 
library(ggplot2) 
#
# 需要自行看图，定细胞亚群：
celltype=data.frame(ClusterID=0:(length(table(Idents(sce)))-1),celltype=0:(length(table(Idents(sce)))-1)) 
celltype[celltype$ClusterID %in% c(13,
                                   21,
                                   28,
                                   42,
                                   44
                                   
),2]='B_cell'
celltype[celltype$ClusterID %in% c(9,
                                   19,
                                   20,
                                   30,
                                   31,
                                   36,
                                   40
                                   
                                   
),2]='Malignancy_and_epi'
celltype[celltype$ClusterID %in% c(11,
                                   18,
                                   27,
                                   29
                                   
),2]='Endothelial'
celltype[celltype$ClusterID %in% c(16,
                                   17,
                                   24,
                                   41,
                                   45
                                   
),2]='Fibroblast'
celltype[celltype$ClusterID %in% c(38
                                   
                                   
),2]='Mast_cell'
celltype[celltype$ClusterID %in% c(4, 6,
                                   8,
                                   10,
                                   15,
                                   23,22,
                                   25,
                                   32,
                                   35,
                                   37,
                                   39,
                                   43
                                   
),2]='Myeloid_cell' 
celltype[celltype$ClusterID %in% c(0,
                                   1,
                                   2,
                                   3,
                                   5,
                                   
                                   7,
                                   12,
                                   14,
                                   
                                   26,
                                   33,
                                   34
                                   
),2]='T/NK_cell'
# celltype[celltype$ClusterID %in% c(21
#                                    
# ),2]='Unknown'
head(celltype)
celltype
table(celltype$celltype)
sce@meta.data$celltype = "NA"
for(i in 1:nrow(celltype)){
  sce@meta.data[which(sce@active.ident == celltype$ClusterID[i]),'celltype'] <- celltype$celltype[i]}
table(sce@meta.data$celltype)
th=theme(axis.text.x = element_text(angle = 45, 
                                    vjust = 0.5, hjust=0.5)) 
genes_to_check = c("BANK1", "CD79B", 'CD79A','MS4A1',#B cell
                   'CDH5','CLDN5','VWF',"FCN3",#Endothelial
                   'COL1A1','ACTA2',"COL1A2","COL3A1", #fibroblast
                   'KRT19','KRT7','EPCAM',"ALB", #Malignancy and epi
                   "TPSAB1","TPSB2","MS4A2","CPA3",  #MAST 
                   "HLA-DPB1","MS4A6A","LYZ","FTL",# myeloid CST3
                   'CD2', 'CD3D', 'CD3E',"CD69" #T cells
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltype' )+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("P1.pdf",width = 8.5,height =3)
#细胞类型的tsne图
DimPlot(sce, reduction = "tsne", group.by = "celltype",label = T,raster=FALSE)+theme(aspect.ratio = 1) #用
ggsave("tsne_celltype.pdf",height = 6,width = 7.6)
DimPlot(sce, reduction = "umap", group.by = sel.clust,label = T,raster=FALSE) +theme(aspect.ratio = 1)#用
ggsave("P3.pdf",height = 6,width = 7.6)
DimPlot(sce, reduction = "umap", group.by = "celltype",raster=FALSE,
        label = T,cols = c("#244552","#25706B","#28968B","#88AC79","#E1BF6A","#EB9D62","#DA6C4F")) +theme(aspect.ratio = 1)#用
ggsave("P2.pdf",height = 6,width = 7.6)

DimPlot(sce, reduction = "umap", group.by = "celltype",raster=FALSE,split.by = "type",
        label = T,cols = c("#244552","#25706B","#28968B","#88AC79","#E1BF6A","#EB9D62","#DA6C4F")) +theme(aspect.ratio = 1)#用
ggsave("P2-2.pdf",height = 6,width = 18)
DimPlot(sce, reduction = "umap", group.by = "type",raster=FALSE) +theme(aspect.ratio = 1)#用
ggsave("P2-3.pdf",height = 6,width = 6)
DimPlot(sce, reduction = "umap", group.by = "patient_id",raster=FALSE) +theme(aspect.ratio = 1)#用
ggsave("P2-4.pdf",height = 6,width = 6)

#每个病人的分布图
DimPlot(sce, reduction = "umap", group.by = "patient_id",raster=FALSE)+theme(aspect.ratio = 1)
ggsave("umap_patient_id.pdf",height = 6,width = 7.8)
##需要查看每个病人的每种细胞的分布，发现可能不太对
table(sce@meta.data$patient_id,sce@meta.data$celltype)
sce$celltype_CCA_1.5 <- sce$celltype

#cpdb细胞数据整理####
sce$celltypedb <- "Unknown"
#肿瘤细胞
setwd('D:\\leadtest\\epi\\inferCNV_epi')
load("episce_markers.Rdata")
#去掉P4 张连清###
table(episce$patient)
#episce <- subset(episce, cells = colnames(episce)[which(!episce$patient %in% c("P04"))])
table(episce$celltype)
table(episce$patient_id)
#映射
library(dplyr)
#把epi映射到大队列中去#
table(episce$celltype)
sce$celltypedb[match(colnames(episce),colnames(sce))]<-episce$celltype%>%as.character()
table(sce$celltypedb)
#其他免疫细胞投影一下#
setwd("D:\\leadtest\\immune")
load("isce.raw.Rdata")
table(isce$celltype)

sce$celltypedb[match(colnames(isce),colnames(sce))]<-isce$celltype%>%as.character()
table(sce$celltypedb)


#其他免疫细胞投影一下#
setwd("D:\\leadtest\\immune\\myeloid")
load("msce_marker.Rdata")
table(msce$celltype)

sce$celltypedb[match(colnames(msce),colnames(sce))]<-msce$celltype%>%as.character()
table(sce$celltypedb)

#巨噬细胞##
setwd("D:\\leadtest\\immune\\myeloid\\macro2")
load("masce_marker.Rdata")
table(masce$celltype)
#把macro映射到大队列中去#
sce$celltypedb[match(colnames(masce),colnames(sce))]<-masce$celltype%>%as.character()
table(sce$celltypedb)

#DC#
setwd("D:\\leadtest\\immune\\myeloid\\DC")
load("dcsce_marker.Rdata")
table(dcsce$celltype)
#把dc映射到大队列中去#
sce$celltypedb[match(colnames(dcsce),colnames(sce))]<-dcsce$celltype%>%as.character()
table(sce$celltypedb)
#neu#
setwd("D:\\leadtest\\immune\\myeloid\\neu")
load("neusce_marker.Rdata")
table(neusce$celltype)
#把dc映射到大队列中去#
sce$celltypedb[match(colnames(neusce),colnames(sce))]<-neusce$celltype%>%as.character()
table(sce$celltypedb)

#单核细胞##
setwd("D:\\leadtest\\immune\\myeloid\\mono")
load("mosce_marker.Rdata")
table(mosce$celltype)
#把macro映射到大队列中去#
sce$celltypedb[match(colnames(mosce),colnames(sce))]<-mosce$celltype%>%as.character()
table(sce$celltypedb)

#T细胞#
setwd("D:\\leadtest\\immune\\tnk")
load("tksce_marker.Rdata")
table(tksce$celltype)
#把tnk映射到大队列中去#
sce$celltypedb[match(colnames(tksce),colnames(sce))]<-tksce$celltype%>%as.character()
table(sce$celltypedb)

#B细胞#
setwd("D:\\leadtest\\immune\\B")
load("bsce_marker.Rdata")
table(bsce$celltype)
#把b映射到大队列中去#
sce$celltypedb[match(colnames(bsce),colnames(sce))]<-bsce$celltype%>%as.character()
table(sce$celltypedb)
table(sce$celltypedb,sce$celltype)

#Fibro细胞#
setwd("D:\\leadtest\\fibro_all")
load("fsce_all.marker.Rdata")
table(fsce$celltype)
#把b映射到大队列中去#
sce$celltypedb[match(colnames(fsce),colnames(sce))]<-fsce$celltype%>%as.character()
table(sce$celltypedb)
table(sce$celltypedb,sce$celltype)

#fibro,endothelial#
sce$celltypedb[which(sce$celltype %in% c("Endothelial"))] <- "Endothelial"
# sce$celltypedb[which(sce$celltype %in% c("Fibroblast"))] <- "Fibroblast"
# sce$celltypedb[which(sce$celltype %in% c("Mast_cell"))] <- "Mast_cell"
table(sce$celltype)
table(sce$celltypedb)
table(sce$celltypedb,sce$celltype)

#SIRPA-CD47互作的处理#####
#巨噬细胞统一定义成巨噬细胞
table(sce$celltypedb)
sce$celltypedb[which(sce$celltypedb%in%c("Mac_c0_JUN","Mac_c1_CXCL10","Mac_c2_APOC1","Mac_c3_IL1B","Mac_c4_FOLR2","Mac_c5_MKI67","Mac_c6_SPP1"))] <- "Macrophage"
table(sce$celltypedb)
table(sce$celltypedb,sce$type)




setwd("D:\\leadtest")
# #cc准备文件####
# Jsce <- subset(sce, cells = colnames(sce)[which(sce$type %in% c("J"))])
# save(Jsce,file = "cc_J_cellphonedb.Rdata")
# Tsce <- subset(sce, cells = colnames(sce)[which(sce$type %in% c("T"))])
# save(Tsce,file = "cc_T_cellphonedb.Rdata")
#cpdb准备文件####
setwd("D:\\leadtest\\cpdb")
table(sce$type,sce$patient_id)
table(sce$celltypedb,sce$celltype)
#J组
Jsce <- subset(sce, cells = colnames(sce)[which(sce$type %in% c("J"))])
table(Jsce$type,Jsce$patient_id)
write.table(as.matrix(Jsce@assays$RNA@data), 'Jsce_cellphonedb_count.txt', sep='\t', quote=F)
meta_data <- cbind(rownames(Jsce@meta.data), Jsce@meta.data[,'celltypedb', drop=F])  
meta_data <- as.matrix(meta_data)
#meta_dat[is.na(meta_data)] = "Unknown" #  细胞类型中不能有NA
write.table(meta_data, 'Jsce_cellphonedb_meta.txt', sep='\t', quote=F, row.names=F)
#T组
Tsce <- subset(sce, cells = colnames(sce)[which(sce$type %in% c("T"))])
table(Tsce$type,Tsce$patient_id)
write.table(as.matrix(Tsce@assays$RNA@data), 'Tsce_cellphonedb_count.txt', sep='\t', quote=F)
meta_data <- cbind(rownames(Tsce@meta.data), Tsce@meta.data[,'celltypedb', drop=F])  
meta_data <- as.matrix(meta_data)
# meta_dat[is.na(meta_data)] = "Unkown" #  细胞类型中不能有NA
write.table(meta_data, 'Tsce_cellphonedb_meta.txt', sep='\t', quote=F, row.names=F)
#N组
Nsce <- subset(sce, cells = colnames(sce)[which(sce$type %in% c("N"))])
table(Nsce$type,Nsce$patient_id)
write.table(as.matrix(Nsce@assays$RNA@data), 'Nsce_cellphonedb_count.txt', sep='\t', quote=F)
meta_data <- cbind(rownames(Nsce@meta.data), Nsce@meta.data[,'celltypedb', drop=F])  
meta_data <- as.matrix(meta_data)
# meta_dat[is.na(meta_data)] = "Unkown" #  细胞类型中不能有NA
write.table(meta_data, 'Nsce_cellphonedb_meta.txt', sep='\t', quote=F, row.names=F)
#JT组
JTsce <- subset(sce, cells = colnames(sce)[which(sce$type %in% c("T","J"))])
table(JTsce$type,JTsce$patient_id)
write.table(as.matrix(JTsce@assays$RNA@data), 'JTsce_cellphonedb_count.txt', sep='\t', quote=F)
meta_data <- cbind(rownames(JTsce@meta.data), JTsce@meta.data[,'celltypedb', drop=F])  
meta_data <- as.matrix(meta_data)
# meta_dat[is.na(meta_data)] = "Unkown" #  细胞类型中不能有NA
write.table(meta_data, 'JTsce_cellphonedb_meta.txt', sep='\t', quote=F, row.names=F)

#所有组
write.table(as.matrix(sce@assays$RNA@data), 'sce_cellphonedb_count.txt', sep='\t', quote=F)
meta_data <- cbind(rownames(sce@meta.data), sce@meta.data[,'scelltype', drop=F])  
meta_data <- as.matrix(meta_data)
# meta_dat[is.na(meta_data)] = "Unkown" #  细胞类型中不能有NA
write.table(meta_data, 'sce_cellphonedb_meta.txt', sep='\t', quote=F, row.names=F)
setwd("D:\\leadtest")

#cpdb代码#
cellphonedb method statistical_analysis  Tsce_cellphonedb_meta.txt  Tsce_cellphonedb_count.txt --counts-data=gene_name --output-path=outTsce --threads=8;cellphonedb plot dot_plot --means-path=/home/sutai/work/cpdb/outTsce/means.txt --pvalues-path=/home/sutai/work/cpdb/outTsce/pvalues.txt --output-path=outTsce;cellphonedb plot heatmap_plot Tsce_cellphonedb_meta.txt --pvalues-path=/home/sutai/work/cpdb/outTsce/pvalues.txt --output-path=outTsce
cellphonedb method statistical_analysis  Jsce_cellphonedb_meta.txt  Jsce_cellphonedb_count.txt --counts-data=gene_name --output-path=outJsce --threads=8;cellphonedb plot dot_plot --means-path=/home/sutai/work/cpdb/outJsce/means.txt --pvalues-path=/home/sutai/work/cpdb/outJsce/pvalues.txt --output-path=outJsce;cellphonedb plot heatmap_plot Jsce_cellphonedb_meta.txt --pvalues-path=/home/sutai/work/cpdb/outJsce/pvalues.txt --output-path=outJsce
cellphonedb method statistical_analysis  Nsce_cellphonedb_meta.txt  Nsce_cellphonedb_count.txt --counts-data=gene_name --output-path=outNsce --threads=8;cellphonedb plot dot_plot --means-path=/home/sutai/work/cpdb/outNsce/means.txt --pvalues-path=/home/sutai/work/cpdb/outNsce/pvalues.txt --output-path=outNsce;cellphonedb plot heatmap_plot Nsce_cellphonedb_meta.txt --pvalues-path=/home/sutai/work/cpdb/outNsce/pvalues.txt --output-path=outNsce



#相关性热图J####
#提取出免疫细胞#

#sce$celltypel <- sce$celltype
table(sce$celltype)
table(sce$celltypedb)
isce <- subset(sce, cells = colnames(sce)[which(!sce$celltypedb %in% c('Tumor_cell',"Unknown","Cholangiocyte","Hepatocyte"," Macrophage"))])
table(isce$celltypedb)
isce$celltype <- isce$celltypedb
#提取出交界区
isce_J <- subset(isce, cells = colnames(isce)[which(isce$type %in% c('J'))])
table(isce_J$type)
table(isce_J$celltype)
isce_J$celltype <- factor(isce_J$celltype,levels = c("CD4+T_c0_Tcm_ANXA1", 
                                                     "CD4+T_c1_Tcm_GPR183", 
                                                     "CD4+T_c2_Treg_FAAH2",
                                                     "CD4+T_c3_naive_TCF7",
                                                     "CD4+T_c4_Treg_FOXP3", 
                                                     "CD4+T_c5_helper_CXCL13",
                                                     "CD8+T_c0_effector_GZMK", 
                                                     "CD8+T_c1_MAIT_CCL20", 
                                                     "CD8+T_c2_exhausted_LAG3hi", 
                                                     "CD8+T_c3_naive_CCR7", 
                                                     "CD8+T_c4_memory_ZNF683", 
                                                     "CD8+T_c5_effector_GZMK", 
                                                     "CD8+T_c6_prolif_MKI67", 
                                                     "CD8+T_c7_MAIT_SLC4A10", 
                                                     "CD8+T_c8_resident_CD69", 
                                                     "CD8+T_c9_IFNR_IFIT2",
                                                     "DNT",
                                                     
                                                     "Plasma_B",
                                                     "Naive_B_IgD",
                                                     "Memory_B", 
                                                     "Cycling_plasma", 
                                                     
                                                     "cDC1",
                                                     "cDC2",
                                                     "LAMP3_DC",
                                                     "pDC", 
                                                     
                                                     
                                                     
                                                     "Endothelial", 
                                                     "Fibroblast", 
                                                     "Mast_cell", 
                                                     
                                                     
                                                     
                                                     "Mono_c0_S100A9", 
                                                     "Mono_c1_HLA-DPB1", 
                                                     "Mono_c2_FCGR3A", 
                                                     "Mono_c3_TNF", 
                                                     
                                                     "N0_CCL4", 
                                                     "N1_S100A8", 
                                                     "N2_IFIT1", 
                                                     
                                                     
                                                     "NK_c0_CD56dimCD16hi", 
                                                     "NK_c1_CD56dimCD16lo", 
                                                     "NK_c2_CD56bright_CD16lo_CD160hi", 
                                                     "NK_c3_CD56dim_CD16hi_CD160", 
                                                     "NK_c4_CD56bright_XCL1", 
                                                     
                                                     
                                                     
                                                     
                                                     "C1QA_Macro", 
                                                     "SPP1_Macro",
                                                     "IL1B_Macro",
                                                     "Proliferating_Macro"  ))
table(isce_J$celltype)
levels(isce_J$celltype)

#各type分组的细胞比例
df <- FetchData(isce_J, vars = c('celltype', 'type',"patient_id"))
table(df$type)#查看各组细胞数
table(df$patient_id)#查看各组细胞数
prop.table(table(df$celltype))
prop.table(table(df$type))
table(df$celltype, df$type)#各组不同细胞群细胞数
table(df$celltype, df$patient_id)
Cellratio <- prop.table(table(df$celltype,df$patient_id),margin = 2)#计算各组样本不同细胞群比例
Cellratio <- as.data.frame(Cellratio)
#长数据变宽数据
library(tidyr)
library(tidyverse)
wide_df <- pivot_wider(Cellratio, names_from = Var1, values_from = Freq)
wide_df$Var2 <- as.character(wide_df$Var2)

#wide_df <- rownames_to_column(wide_df, var = "Var2")
class(wide_df$Var2)
rownames(wide_df) <- wide_df$Var2
wide_df <- wide_df[,-1]
rownames(wide_df2) <- factor(rownames(wide_df2))
colnames(wide_df2) <- factor(colnames(wide_df2))

#画图
library(pheatmap)
wide_df2 <- cor(wide_df, method= "spearman")
dev.new()
pheatmap(wide_df2,cluster_cols = F,cluster_rows = F,
         #filename = "immune_celltype_cor_J.pdf",width = 8,height = 8,
         color = colorRampPalette(c("navy", "white", "firebrick3"))(50))

testRes = cor.mtest(wide_df, conf.level = 0.95)
library(corrplot)
corrplot(wide_df2, 
         type="upper",
         tl.col="black",  p.mat = testRes$p,
         tl.srt=45, insig='blank', # 不显著留空
         col =  colorRampPalette(c("navy", "white", "firebrick3"))(50)
)
corrplot(wide_df2, p.mat = testRes$p,
         col =  colorRampPalette(c("navy", "white", "firebrick3"))(50),
         method = 'color', diag = FALSE,  tl.col="black",
         type = 'lower', sig.level = c(0.001, 0.01, 0.05), pch.cex = 1.5, insig = 'label_sig', pch.col = 'grey20')

#9x9
?corrplot()


#相关性热图T####
#提取出免疫细胞#

#sce$celltypel <- sce$celltype
table(sce$celltype)
table(sce$celltypedb)
isce <- subset(sce, cells = colnames(sce)[which(!sce$celltypedb %in% c('Tumor_cell',"Unknown","Cholangiocyte","Hepatocyte"," Macrophage"))])
table(isce$celltypedb)
isce$celltype <- isce$celltypedb
#提取出交界区
isce_T <- subset(isce, cells = colnames(isce)[which(isce$type %in% c('T'))])
table(isce_T$type)
table(isce_T$celltype)
isce_T$celltype <- factor(isce_T$celltype,levels = c("CD4+T_c0_Tcm_ANXA1", 
                                                     "CD4+T_c1_Tcm_GPR183", 
                                                     "CD4+T_c2_Treg_FAAH2",
                                                     "CD4+T_c3_naive_TCF7",
                                                     "CD4+T_c4_Treg_FOXP3", 
                                                     "CD4+T_c5_helper_CXCL13",
                                                     "CD8+T_c0_effector_GZMK", 
                                                     "CD8+T_c1_MAIT_CCL20", 
                                                     "CD8+T_c2_exhausted_LAG3hi", 
                                                     "CD8+T_c3_naive_CCR7", 
                                                     "CD8+T_c4_memory_ZNF683", 
                                                     "CD8+T_c5_effector_GZMK", 
                                                     "CD8+T_c6_prolif_MKI67", 
                                                     "CD8+T_c7_MAIT_SLC4A10", 
                                                     "CD8+T_c8_resident_CD69", 
                                                     "CD8+T_c9_IFNR_IFIT2",
                                                     "DNT",
                                                     
                                                     "Plasma_B",
                                                     "Naive_B_IgD",
                                                     "Memory_B", 
                                                     "Cycling_plasma", 
                                                     
                                                     "cDC1",
                                                     "cDC2",
                                                     "LAMP3_DC",
                                                     "pDC", 
                                                     
                                                     
                                                     
                                                     "Endothelial", 
                                                     "Fibroblast", 
                                                     "Mast_cell", 
                                                     
                                                     
                                                     
                                                     "Mono_c0_S100A9", 
                                                     "Mono_c1_HLA-DPB1", 
                                                     "Mono_c2_FCGR3A", 
                                                     "Mono_c3_TNF", 
                                                     
                                                     "N0_CCL4", 
                                                     "N1_S100A8", 
                                                     "N2_IFIT1", 
                                                     
                                                     
                                                     "NK_c0_CD56dimCD16hi", 
                                                     "NK_c1_CD56dimCD16lo", 
                                                     "NK_c2_CD56bright_CD16lo_CD160hi", 
                                                     "NK_c3_CD56dim_CD16hi_CD160", 
                                                     "NK_c4_CD56bright_XCL1", 
                                                     
                                                     
                                                     
                                                     
                                                     "C1QA_Macro", 
                                                     "SPP1_Macro",
                                                     "IL1B_Macro",
                                                     "Proliferating_Macro"  ))
table(isce_T$celltype)
levels(isce_T$celltype)

#各type分组的细胞比例
df <- FetchData(isce_T, vars = c('celltype', 'type',"patient_id"))
table(df$type)#查看各组细胞数
table(df$patient_id)#查看各组细胞数
prop.table(table(df$celltype))
prop.table(table(df$type))
table(df$celltype, df$type)#各组不同细胞群细胞数
table(df$celltype, df$patient_id)
Cellratio <- prop.table(table(df$celltype,df$patient_id),margin = 2)#计算各组样本不同细胞群比例
Cellratio <- as.data.frame(Cellratio)
#长数据变宽数据
library(tidyr)
library(tidyverse)
wide_df <- pivot_wider(Cellratio, names_from = Var1, values_from = Freq)
wide_df$Var2 <- as.character(wide_df$Var2)

#wide_df <- rownames_to_column(wide_df, var = "Var2")
class(wide_df$Var2)
rownames(wide_df) <- wide_df$Var2
wide_df <- wide_df[,-1]
#rownames(wide_df2) <- factor(rownames(wide_df2))
#colnames(wide_df2) <- factor(colnames(wide_df2))

#画图
library(pheatmap)
wide_df2 <- cor(wide_df, method= "spearman")
dev.new()
pheatmap(wide_df2,cluster_cols = F,cluster_rows = F,
         #filename = "immune_celltype_cor_T.pdf",width = 8,height = 8,
         color = colorRampPalette(c("navy", "white", "firebrick3"))(50))

testRes = cor.mtest(wide_df, conf.level = 0.95)
library(corrplot)
corrplot(wide_df2, 
         type="upper",
         tl.col="black",  p.mat = testRes$p,
         tl.srt=45, insig='blank', # 不显著留空
         col =  colorRampPalette(c("navy", "white", "firebrick3"))(50)
)
corrplot(wide_df2, p.mat = testRes$p,
         col =  colorRampPalette(c("navy", "white", "firebrick3"))(50),
         method = 'color', diag = FALSE,  tl.col="black",
         type = 'upper', sig.level = c(0.001, 0.01, 0.05), pch.cex = 1.5, insig = 'label_sig', pch.col = 'grey20')




#交界区代谢情况####
sce_J
sce_J <- subset(sce, cells = colnames(sce)[which(sce$type %in% c('J'))])

#对T细胞进行分组GSEA
library(Seurat)
library(msigdbr)
library(GSVA)
library(tidyverse)
library(clusterProfiler)
library(patchwork)
library(limma)
genesets <- msigdbr(species = "Homo sapiens", category = "H") 
genesets <- subset(genesets, select = c("gs_name","gene_symbol")) %>% as.data.frame()
genesets <- split(genesets$gene_symbol, genesets$gs_name)
names(genesets)
gs_used <- genesets[c("HALLMARK_ADIPOGENESIS","HALLMARK_FATTY_ACID_METABOLISM","HALLMARK_HYPOXIA","HALLMARK_OXIDATIVE_PHOSPHORYLATION",
                      "HALLMARK_APOPTOSIS","HALLMARK_TNFA_SIGNALING_VIA_NFKB","HALLMARK_ANGIOGENESIS",
                      "HALLMARK_E2F_TARGETS", "HALLMARK_G2M_CHECKPOINT","HALLMARK_NOTCH_SIGNALING",
                      "HALLMARK_INFLAMMATORY_RESPONSE"
)]
names(genesets)
gs_used


genesets<- msigdbr(species = "Homo sapiens", category = "C2",subcategory = "CP:KEGG")
genesets <- subset(genesets, select = c("gs_name","gene_symbol")) %>% as.data.frame()
genesets <- split(genesets$gene_symbol, genesets$gs_name)
names(genesets)
gs_used2 <- genesets[c("KEGG_CELL_CYCLE","KEGG_APOPTOSIS","KEGG_ADHERENS_JUNCTION",
                       "KEGG_ANTIGEN_PROCESSING_AND_PRESENTATION","KEGG_JAK_STAT_SIGNALING_PATHWAY" ,"KEGG_VEGF_SIGNALING_PATHWAY","KEGG_WNT_SIGNALING_PATHWAY","KEGG_TOLL_LIKE_RECEPTOR_SIGNALING_PATHWAY",
                       "KEGG_CELL_ADHESION_MOLECULES_CAMS","KEGG_DNA_REPLICATION","KEGG_FOCAL_ADHESION","KEGG_FATTY_ACID_METABOLISM","KEGG_ECM_RECEPTOR_INTERACTION"
                       
)]
tt <- c(gs_used, gs_used2)

#t8sce_J@meta.data <- t8sce_J@meta.data[-c(23:25)]
DefaultAssay(sce_J) <- "RNA"
cd_features <- list(c("CCR7","TCF7","LEF1","SELL"#'Naive_Score'
))
names(cd_features) <- 'Naive_Score'
tt <- c(tt,cd_features)

cd_features <- list(c("PDCD1","TIGIT","LAG3","HAVCR2","CTLA4"#'Exhausted_Score'
))
names(cd_features) <- 'Exhausted_Score'
tt <- c(tt,cd_features)


cd_features <- list(c("NKG7","PRF1","CCL4","GZMA","GZMB","CST7","IFNG","GZMK"#'Cytotoxic_Score',"FGFBP2"
))
names(cd_features) <- 'Cytotoxic_Score'
tt <- c(tt,cd_features)

cd_features <- list(c("MRC1","CD163","MERTK","C1QB","C1QA"
))
names(cd_features) <- 'Phagocytosis_score'
tt <- c(tt,cd_features)




DefaultAssay(sce_J) <- "RNA"
#Stress
a <-"FOS
ATF3
NR4A1
DUSP1
ZFP36
PPP1R15A
SGK1
EGR1
ZC3H12A
JUNB
FOSB
IER2
NFKBIA
NFKBIZ
HBEGF
BTG2
SOD2
CDKN1A
NCOA7
JUN
MYC
SERTAD1
CCNL1
RND3
PLK2
SOCS3
DNAJB1
DUSP2
TSC22D1
KLF10
GADD45B
PMAIP1
MAFF
ERRFI1
SLC38A2
IRF1
TOB1
ID2
KLF6
DNAJA1
TNFAIP3
BHLHE40
NXF1
FOSL1
IER3
DUSP6
HCAR2
IL8
CYR61
EFNA1
"
cd_features <- strsplit(a,split = "\n") 

names(cd_features) <- 'Stress'
tt <- c(tt,cd_features)


genesets <- tt
#GSVA富集分析#
Idents(sce_J) <- "celltypedb" 
expr <- AverageExpression(sce_J, assays = "RNA", slot = "data")[[1]]
expr <- expr[rowSums(expr)>0,]  #选取非零基因
expr <- as.matrix(expr)
head(expr)

gsva.res <- gsva(expr, genesets, method="gsva") 
#saveRDS(gsva.res, "gsva.res.rds")
gsva.df <- data.frame(Genesets=rownames(gsva.res), gsva.res, check.names = F)
#write.csv(gsva.df, "gsva_res.csv", row.names = F)
pdf("GSVA_28_gs_celltype_J.pdf",height = 8,width=12)
pheatmap::pheatmap(gsva.res, show_colnames = T, cluster_cols=F,cluster_rows=F,	
                   #scale = "row",
                   angle_col = "90",
                   color = colorRampPalette(c("navy", "white", "firebrick3"))(50))
dev.off()



genesets <- tt
#
Idents(sce_J) <- "type" 
expr <- AverageExpression(sce_J, assays = "RNA", slot = "data")[[1]]
expr <- expr[rowSums(expr)>0,]  #选取非零基因
expr <- as.matrix(expr)
head(expr)

gsva.res <- gsva(expr, genesets, method="gsva") 
#saveRDS(gsva.res, "gsva.res.rds")
gsva.df <- data.frame(Genesets=rownames(gsva.res), gsva.res, check.names = F)
#write.csv(gsva.df, "gsva_res.csv", row.names = F)
pdf("GSVA_28_gs_type.pdf",height = 7,width=5)
pheatmap::pheatmap(gsva.res, show_colnames = T, cluster_cols=F,cluster_rows=F,	
                   #scale = "row",
                   angle_col = "45",
                   color = colorRampPalette(c("navy", "white", "firebrick3"))(50))
dev.off()

#genesets_used_T####
sce_J
sce_J <- subset(sce, cells = colnames(sce)[which(sce$type %in% c('T'))])

#对T细胞进行分组GSEA
library(Seurat)
library(msigdbr)
library(GSVA)
library(tidyverse)
library(clusterProfiler)
library(patchwork)
library(limma)
genesets <- msigdbr(species = "Homo sapiens", category = "H") 
genesets <- subset(genesets, select = c("gs_name","gene_symbol")) %>% as.data.frame()
genesets <- split(genesets$gene_symbol, genesets$gs_name)
names(genesets)
gs_used <- genesets[c("HALLMARK_ADIPOGENESIS","HALLMARK_FATTY_ACID_METABOLISM","HALLMARK_HYPOXIA","HALLMARK_OXIDATIVE_PHOSPHORYLATION",
                      "HALLMARK_APOPTOSIS","HALLMARK_TNFA_SIGNALING_VIA_NFKB","HALLMARK_ANGIOGENESIS",
                      "HALLMARK_E2F_TARGETS", "HALLMARK_G2M_CHECKPOINT","HALLMARK_NOTCH_SIGNALING",
                      "HALLMARK_INFLAMMATORY_RESPONSE"
)]
names(genesets)
gs_used


genesets<- msigdbr(species = "Homo sapiens", category = "C2",subcategory = "CP:KEGG")
genesets <- subset(genesets, select = c("gs_name","gene_symbol")) %>% as.data.frame()
genesets <- split(genesets$gene_symbol, genesets$gs_name)
names(genesets)
gs_used2 <- genesets[c("KEGG_CELL_CYCLE","KEGG_APOPTOSIS","KEGG_ADHERENS_JUNCTION",
                       "KEGG_ANTIGEN_PROCESSING_AND_PRESENTATION","KEGG_JAK_STAT_SIGNALING_PATHWAY" ,"KEGG_VEGF_SIGNALING_PATHWAY","KEGG_WNT_SIGNALING_PATHWAY","KEGG_TOLL_LIKE_RECEPTOR_SIGNALING_PATHWAY",
                       "KEGG_CELL_ADHESION_MOLECULES_CAMS","KEGG_DNA_REPLICATION","KEGG_FOCAL_ADHESION","KEGG_FATTY_ACID_METABOLISM","KEGG_ECM_RECEPTOR_INTERACTION"
                       
)]
tt <- c(gs_used, gs_used2)

#t8sce_J@meta.data <- t8sce_J@meta.data[-c(23:25)]
DefaultAssay(sce_J) <- "RNA"
cd_features <- list(c("CCR7","TCF7","LEF1","SELL"#'Naive_Score'
))
names(cd_features) <- 'Naive_Score'
tt <- c(tt,cd_features)

cd_features <- list(c("PDCD1","TIGIT","LAG3","HAVCR2","CTLA4"#'Exhausted_Score'
))
names(cd_features) <- 'Exhausted_Score'
tt <- c(tt,cd_features)


cd_features <- list(c("NKG7","PRF1","CCL4","GZMA","GZMB","CST7","IFNG","GZMK"#'Cytotoxic_Score',"FGFBP2"
))
names(cd_features) <- 'Cytotoxic_Score'
tt <- c(tt,cd_features)

cd_features <- list(c("MRC1","CD163","MERTK","C1QB","C1QA"
))
names(cd_features) <- 'Phagocytosis_score'
tt <- c(tt,cd_features)




DefaultAssay(sce_J) <- "RNA"
#Stress
a <-"FOS
ATF3
NR4A1
DUSP1
ZFP36
PPP1R15A
SGK1
EGR1
ZC3H12A
JUNB
FOSB
IER2
NFKBIA
NFKBIZ
HBEGF
BTG2
SOD2
CDKN1A
NCOA7
JUN
MYC
SERTAD1
CCNL1
RND3
PLK2
SOCS3
DNAJB1
DUSP2
TSC22D1
KLF10
GADD45B
PMAIP1
MAFF
ERRFI1
SLC38A2
IRF1
TOB1
ID2
KLF6
DNAJA1
TNFAIP3
BHLHE40
NXF1
FOSL1
IER3
DUSP6
HCAR2
IL8
CYR61
EFNA1
"
cd_features <- strsplit(a,split = "\n") 

names(cd_features) <- 'Stress'
tt <- c(tt,cd_features)


genesets <- tt
#GSVA富集分析#
Idents(sce_J) <- "celltypedb" 
expr <- AverageExpression(sce_J, assays = "RNA", slot = "data")[[1]]
expr <- expr[rowSums(expr)>0,]  #选取非零基因
expr <- as.matrix(expr)
head(expr)

gsva.res <- gsva(expr, genesets, method="gsva") 
#saveRDS(gsva.res, "gsva.res.rds")
gsva.df <- data.frame(Genesets=rownames(gsva.res), gsva.res, check.names = F)
#write.csv(gsva.df, "gsva_res.csv", row.names = F)
pdf("GSVA_28_gs_celltype_T.pdf",height = 8,width=12)
pheatmap::pheatmap(gsva.res, show_colnames = T, cluster_cols=F,cluster_rows=F,	
                   #scale = "row",
                   angle_col = "90",
                   color = colorRampPalette(c("navy", "white", "firebrick3"))(50))
dev.off()



genesets <- tt
#
Idents(sce_J) <- "type" 
expr <- AverageExpression(sce_J, assays = "RNA", slot = "data")[[1]]
expr <- expr[rowSums(expr)>0,]  #选取非零基因
expr <- as.matrix(expr)
head(expr)

gsva.res <- gsva(expr, genesets, method="gsva") 
#saveRDS(gsva.res, "gsva.res.rds")
gsva.df <- data.frame(Genesets=rownames(gsva.res), gsva.res, check.names = F)
#write.csv(gsva.df, "gsva_res.csv", row.names = F)
pdf("GSVA_28_gs_type.pdf",height = 7,width=5)
pheatmap::pheatmap(gsva.res, show_colnames = T, cluster_cols=F,cluster_rows=F,	
                   #scale = "row",
                   angle_col = "45",
                   color = colorRampPalette(c("navy", "white", "firebrick3"))(50))
dev.off()




#genesets_used_JNT####
sce$type <- factor(sce$type,c("N","J","T"))

table(sce$type)
table(sce$celltypedb)
sce$celltypegs <- paste0(sce$celltypedb,"_",sce$type)
table(sce$celltypegs)
unique(sce$celltypegs)
sce$celltypegs <- factor(sce$celltypegs)
#对T细胞进行分组GSEA
library(Seurat)
library(msigdbr)
library(GSVA)
library(tidyverse)
library(clusterProfiler)
library(patchwork)
library(limma)
genesets <- msigdbr(species = "Homo sapiens", category = "H") 
genesets <- subset(genesets, select = c("gs_name","gene_symbol")) %>% as.data.frame()
genesets <- split(genesets$gene_symbol, genesets$gs_name)
names(genesets)
gs_used <- genesets[c("HALLMARK_ADIPOGENESIS","HALLMARK_FATTY_ACID_METABOLISM","HALLMARK_HYPOXIA","HALLMARK_OXIDATIVE_PHOSPHORYLATION",
                      "HALLMARK_APOPTOSIS","HALLMARK_TNFA_SIGNALING_VIA_NFKB","HALLMARK_ANGIOGENESIS",
                      "HALLMARK_E2F_TARGETS", "HALLMARK_G2M_CHECKPOINT","HALLMARK_NOTCH_SIGNALING",
                      "HALLMARK_INFLAMMATORY_RESPONSE"
)]
names(genesets)
gs_used


genesets<- msigdbr(species = "Homo sapiens", category = "C2",subcategory = "CP:KEGG")
genesets <- subset(genesets, select = c("gs_name","gene_symbol")) %>% as.data.frame()
genesets <- split(genesets$gene_symbol, genesets$gs_name)
names(genesets)
gs_used2 <- genesets[c("KEGG_CELL_CYCLE","KEGG_APOPTOSIS","KEGG_ADHERENS_JUNCTION",
                       "KEGG_ANTIGEN_PROCESSING_AND_PRESENTATION","KEGG_JAK_STAT_SIGNALING_PATHWAY" ,"KEGG_VEGF_SIGNALING_PATHWAY","KEGG_WNT_SIGNALING_PATHWAY","KEGG_TOLL_LIKE_RECEPTOR_SIGNALING_PATHWAY",
                       "KEGG_CELL_ADHESION_MOLECULES_CAMS","KEGG_DNA_REPLICATION","KEGG_FOCAL_ADHESION","KEGG_FATTY_ACID_METABOLISM","KEGG_ECM_RECEPTOR_INTERACTION"
                       
)]
tt <- c(gs_used, gs_used2)

#t8sce@meta.data <- t8sce@meta.data[-c(23:25)]
DefaultAssay(sce) <- "RNA"
cd_features <- list(c("CCR7","TCF7","LEF1","SELL"#'Naive_Score'
))
names(cd_features) <- 'Naive_Score'
tt <- c(tt,cd_features)

cd_features <- list(c("PDCD1","TIGIT","LAG3","HAVCR2","CTLA4"#'Exhausted_Score'
))
names(cd_features) <- 'Exhausted_Score'
tt <- c(tt,cd_features)


cd_features <- list(c("NKG7","PRF1","CCL4","GZMA","GZMB","CST7","IFNG","GZMK"#'Cytotoxic_Score',"FGFBP2"
))
names(cd_features) <- 'Cytotoxic_Score'
tt <- c(tt,cd_features)

cd_features <- list(c("MRC1","CD163","MERTK","C1QB","C1QA"
))
names(cd_features) <- 'Phagocytosis_score'
tt <- c(tt,cd_features)




DefaultAssay(sce) <- "RNA"
#Stress
a <-"FOS
ATF3
NR4A1
DUSP1
ZFP36
PPP1R15A
SGK1
EGR1
ZC3H12A
JUNB
FOSB
IER2
NFKBIA
NFKBIZ
HBEGF
BTG2
SOD2
CDKN1A
NCOA7
JUN
MYC
SERTAD1
CCNL1
RND3
PLK2
SOCS3
DNAJB1
DUSP2
TSC22D1
KLF10
GADD45B
PMAIP1
MAFF
ERRFI1
SLC38A2
IRF1
TOB1
ID2
KLF6
DNAJA1
TNFAIP3
BHLHE40
NXF1
FOSL1
IER3
DUSP6
HCAR2
IL8
CYR61
EFNA1
"
cd_features <- strsplit(a,split = "\n") 

names(cd_features) <- 'Stress'
tt <- c(tt,cd_features)


genesets <- tt
#GSVA富集分析#
Idents(sce) <- "celltypegs" 
expr <- AverageExpression(sce, assays = "RNA", slot = "data")[[1]]
expr <- expr[rowSums(expr)>0,]  #选取非零基因
expr <- as.matrix(expr)
head(expr)

gsva.res <- gsva(expr, genesets, method="gsva") 
#saveRDS(gsva.res, "gsva.res.rds")
gsva.df <- data.frame(Genesets=rownames(gsva.res), gsva.res, check.names = F)
#write.csv(gsva.df, "gsva_res.csv", row.names = F)
pdf("GSVA_28_gs_celltype_TJN.pdf",height = 8,width=25)
pheatmap::pheatmap(gsva.res, show_colnames = T, cluster_cols=F,cluster_rows=F,	
                   #scale = "row",
                   angle_col = "90",
                   color = colorRampPalette(c("navy", "white", "firebrick3","black"))(50))
dev.off()



genesets <- tt
#
Idents(sce) <- "type" 
expr <- AverageExpression(sce, assays = "RNA", slot = "data")[[1]]
expr <- expr[rowSums(expr)>0,]  #选取非零基因
expr <- as.matrix(expr)
head(expr)

gsva.res <- gsva(expr, genesets, method="gsva") 
#saveRDS(gsva.res, "gsva.res.rds")
gsva.df <- data.frame(Genesets=rownames(gsva.res), gsva.res, check.names = F)
#write.csv(gsva.df, "gsva_res.csv", row.names = F)
pdf("GSVA_28_gs_type.pdf",height = 7,width=5)
pheatmap::pheatmap(gsva.res, show_colnames = T, cluster_cols=F,cluster_rows=F,	
                   #scale = "row",
                   angle_col = "45",
                   color = colorRampPalette(c("navy", "white", "firebrick3"))(50))
dev.off()
#相关性热图，包括增殖性肿瘤细胞####
sce$celltypedb <- "Unknown"
#肿瘤细胞
setwd('D:\\leadtest\\epi\\inferCNV_epi')
load("merge_episce.Rdata")
#去掉P4 张连清###
table(episce$patient)
episce <- subset(episce, cells = colnames(episce)[which(!episce$patient %in% c("P04"))])
table(episce$celltype)
table(episce$patient_id)
#映射
library(dplyr)
#把epi映射到大队列中去#
table(episce$celltype)
sce$celltypedb[match(colnames(episce),colnames(sce))]<-episce$celltype%>%as.character()
table(sce$celltypedb)

setwd("D:\\leadtest\\epi\\inferCNV_epi\\tumor_cell")
load("tmcsce_marker.Rdata")

library(dplyr)
#把epi映射到大队列中去#
table(tmcsce$celltype)
sce$celltypedb[match(colnames(tmcsce),colnames(sce))]<-tmcsce$celltype%>%as.character()
table(sce$celltypedb)


#其他免疫细胞投影一下#
setwd("D:\\leadtest\\immune")
load("isce.raw.Rdata")
table(isce$celltype)

sce$celltypedb[match(colnames(isce),colnames(sce))]<-isce$celltype%>%as.character()
table(sce$celltypedb)

#巨噬细胞##
setwd("D:\\leadtest\\immune\\myeloid\\macro")
load("masce_marker.Rdata")
table(masce$celltype)
#把macro映射到大队列中去#
sce$celltypedb[match(colnames(masce),colnames(sce))]<-masce$celltype%>%as.character()
table(sce$celltypedb)

#DC#
setwd("D:\\leadtest\\immune\\myeloid\\DC")
load("dcsce_marker.Rdata")
table(dcsce$celltype)
#把dc映射到大队列中去#
sce$celltypedb[match(colnames(dcsce),colnames(sce))]<-dcsce$celltype%>%as.character()
table(sce$celltypedb)
#neu#
setwd("D:\\leadtest\\immune\\myeloid\\neu")
load("neusce_marker.Rdata")
table(neusce$celltype)
#把dc映射到大队列中去#
sce$celltypedb[match(colnames(neusce),colnames(sce))]<-neusce$celltype%>%as.character()
table(sce$celltypedb)

#单核细胞##
setwd("D:\\leadtest\\immune\\myeloid\\mono")
load("mosce_marker.Rdata")
table(mosce$celltype)
#把macro映射到大队列中去#
sce$celltypedb[match(colnames(mosce),colnames(sce))]<-mosce$celltype%>%as.character()
table(sce$celltypedb)

#T细胞#
setwd("D:\\leadtest\\immune\\tnk")
load("tksce_marker.Rdata")
table(tksce$celltype)
#把tnk映射到大队列中去#
sce$celltypedb[match(colnames(tksce),colnames(sce))]<-tksce$celltype%>%as.character()
table(sce$celltypedb)

#B细胞#
setwd("D:\\leadtest\\immune\\B")
load("bsce_marker.Rdata")
table(bsce$celltype)
#把b映射到大队列中去#
sce$celltypedb[match(colnames(bsce),colnames(sce))]<-bsce$celltype%>%as.character()
table(sce$celltypedb)
table(sce$celltypedb,sce$celltype)

#fibro,endothelial#
sce$celltypedb[which(sce$celltype %in% c("Endothelial"))] <- "Endothelial"
sce$celltypedb[which(sce$celltype %in% c("Fibroblast"))] <- "Fibroblast"
sce$celltypedb[which(sce$celltype %in% c("Mast_cell"))] <- "Mast_cell"
table(sce$celltypedb)
table(sce$celltypedb,sce$celltype)





#相关性热图J#
#提取出免疫细胞#

#sce$celltypel <- sce$celltype
table(sce$celltype)
table(sce$celltypedb)
isce <- subset(sce, cells = colnames(sce)[which(!sce$celltypedb %in% c("Unknown","Cholangiocyte","Hepatocyte"," Macrophage"))])
table(isce$celltypedb)
isce$celltype <- isce$celltypedb
#提取出交界区
isce_J <- subset(isce, cells = colnames(isce)[which(isce$type %in% c('J'))])
table(isce_J$type)
table(isce_J$celltype)
isce_J$celltype <- factor(isce_J$celltype,levels = c("CD4+T_c0_Tcm_ANXA1", 
                                                     "CD4+T_c1_Tcm_GPR183", 
                                                     "CD4+T_c2_Treg_FAAH2",
                                                     "CD4+T_c3_naive_TCF7",
                                                     "CD4+T_c4_Treg_FOXP3", 
                                                     "CD4+T_c5_helper_CXCL13",
                                                     "CD8+T_c0_effector_GZMK", 
                                                     "CD8+T_c1_MAIT_CCL20", 
                                                     "CD8+T_c2_exhausted_LAG3hi", 
                                                     "CD8+T_c3_naive_CCR7", 
                                                     "CD8+T_c4_memory_ZNF683", 
                                                     "CD8+T_c5_effector_GZMK", 
                                                     "CD8+T_c6_prolif_MKI67", 
                                                     "CD8+T_c7_MAIT_SLC4A10", 
                                                     "CD8+T_c8_resident_CD69", 
                                                     "CD8+T_c9_IFNR_IFIT2",
                                                     "DNT",
                                                     
                                                     "Plasma_B",
                                                     "Naive_B_IgD",
                                                     "Memory_B", 
                                                     "Cycling_plasma", 
                                                     
                                                     "cDC1",
                                                     "cDC2",
                                                     "LAMP3_DC",
                                                     "pDC", 
                                                     
                                                     
                                                     
                                                     "Endothelial", 
                                                     "Fibroblast", 
                                                     "Mast_cell", 
                                                     
                                                     "Proliferating_tumor_cell",
                                                     "Tumor_cell",
                                                     
                                                     "Mono_c0_S100A9", 
                                                     "Mono_c1_HLA-DPB1", 
                                                     "Mono_c2_FCGR3A", 
                                                     "Mono_c3_TNF", 
                                                     
                                                     "N0_CCL4", 
                                                     "N1_S100A8", 
                                                     "N2_IFIT1", 
                                                     
                                                     
                                                     "NK_c0_CD56dimCD16hi", 
                                                     "NK_c1_CD56dimCD16lo", 
                                                     "NK_c2_CD56bright_CD16lo_CD160hi", 
                                                     "NK_c3_CD56dim_CD16hi_CD160", 
                                                     "NK_c4_CD56bright_XCL1", 
                                                     
                                                     
                                                     
                                                     
                                                     "C1QA_Macro", 
                                                     "SPP1_Macro",
                                                     "IL1B_Macro",
                                                     "Proliferating_Macro"  ))
table(isce_J$celltype)
levels(isce_J$celltype)

#各type分组的细胞比例
df <- FetchData(isce_J, vars = c('celltype', 'type',"patient_id"))
table(df$type)#查看各组细胞数
table(df$patient_id)#查看各组细胞数
prop.table(table(df$celltype))
prop.table(table(df$type))
table(df$celltype, df$type)#各组不同细胞群细胞数
table(df$celltype, df$patient_id)
Cellratio <- prop.table(table(df$celltype,df$patient_id),margin = 2)#计算各组样本不同细胞群比例
Cellratio <- as.data.frame(Cellratio)
#长数据变宽数据
library(tidyr)
library(tidyverse)
wide_df <- pivot_wider(Cellratio, names_from = Var1, values_from = Freq)
wide_df$Var2 <- as.character(wide_df$Var2)

#wide_df <- rownames_to_column(wide_df, var = "Var2")
class(wide_df$Var2)
rownames(wide_df) <- wide_df$Var2
wide_df <- wide_df[,-1]
rownames(wide_df2) <- factor(rownames(wide_df2))
colnames(wide_df2) <- factor(colnames(wide_df2))

#画图
library(pheatmap)
wide_df2 <- cor(wide_df, method= "spearman")
dev.new()
pheatmap(wide_df2,cluster_cols = F,cluster_rows = F,
         #filename = "immune_celltype_cor_J.pdf",width = 8,height = 8,
         color = colorRampPalette(c("navy", "white", "firebrick3"))(50))
wide_df2_J <- wide_df2
testRes = cor.mtest(wide_df, conf.level = 0.95)
library(corrplot)
corrplot(wide_df2, 
         type="upper",
         tl.col="black",  p.mat = testRes$p,
         tl.srt=45, insig='blank', # 不显著留空
         col =  colorRampPalette(c("navy", "white", "firebrick3"))(50)
)
corrplot(wide_df2, p.mat = testRes$p,
         col =  colorRampPalette(c("navy", "white", "firebrick3"))(50),
         method = 'color', diag = FALSE,  tl.col="black",
         type = 'lower', sig.level = c(0.001, 0.01, 0.05), pch.cex = 1.5, insig = 'label_sig', pch.col = 'grey20')

#9x9
?corrplot()
#相关性热图T_tumor#
#提取出免疫细胞#

#sce$celltypel <- sce$celltype
table(sce$celltype)
table(sce$celltypedb)
isce <- subset(sce, cells = colnames(sce)[which(!sce$celltypedb %in% c("Unknown","Cholangiocyte","Hepatocyte"," Macrophage"))])
table(isce$celltypedb)
isce$celltype <- isce$celltypedb
#提取出交界区
isce_T <- subset(isce, cells = colnames(isce)[which(isce$type %in% c('T'))])
table(isce_T$type)
table(isce_T$celltype)
isce_T$celltype <- factor(isce_T$celltype,levels = c("CD4+T_c0_Tcm_ANXA1", 
                                                     "CD4+T_c1_Tcm_GPR183", 
                                                     "CD4+T_c2_Treg_FAAH2",
                                                     "CD4+T_c3_naive_TCF7",
                                                     "CD4+T_c4_Treg_FOXP3", 
                                                     "CD4+T_c5_helper_CXCL13",
                                                     "CD8+T_c0_effector_GZMK", 
                                                     "CD8+T_c1_MAIT_CCL20", 
                                                     "CD8+T_c2_exhausted_LAG3hi", 
                                                     "CD8+T_c3_naive_CCR7", 
                                                     "CD8+T_c4_memory_ZNF683", 
                                                     "CD8+T_c5_effector_GZMK", 
                                                     "CD8+T_c6_prolif_MKI67", 
                                                     "CD8+T_c7_MAIT_SLC4A10", 
                                                     "CD8+T_c8_resident_CD69", 
                                                     "CD8+T_c9_IFNR_IFIT2",
                                                     "DNT",
                                                     
                                                     "Plasma_B",
                                                     "Naive_B_IgD",
                                                     "Memory_B", 
                                                     "Cycling_plasma", 
                                                     
                                                     "cDC1",
                                                     "cDC2",
                                                     "LAMP3_DC",
                                                     "pDC", 
                                                     
                                                     
                                                     
                                                     "Endothelial", 
                                                     "Fibroblast", 
                                                     "Mast_cell", 
                                                     
                                                     "Proliferating_tumor_cell",
                                                     "Tumor_cell",
                                                     
                                                     "Mono_c0_S100A9", 
                                                     "Mono_c1_HLA-DPB1", 
                                                     "Mono_c2_FCGR3A", 
                                                     "Mono_c3_TNF", 
                                                     
                                                     "N0_CCL4", 
                                                     "N1_S100A8", 
                                                     "N2_IFIT1", 
                                                     
                                                     
                                                     "NK_c0_CD56dimCD16hi", 
                                                     "NK_c1_CD56dimCD16lo", 
                                                     "NK_c2_CD56bright_CD16lo_CD160hi", 
                                                     "NK_c3_CD56dim_CD16hi_CD160", 
                                                     "NK_c4_CD56bright_XCL1", 
                                                     
                                                     
                                                     
                                                     
                                                     "C1QA_Macro", 
                                                     "SPP1_Macro",
                                                     "IL1B_Macro",
                                                     "Proliferating_Macro"  ))
table(isce_T$celltype)
levels(isce_T$celltype)

#各type分组的细胞比例
df <- FetchData(isce_T, vars = c('celltype', 'type',"patient_id"))
table(df$type)#查看各组细胞数
table(df$patient_id)#查看各组细胞数
prop.table(table(df$celltype))
prop.table(table(df$type))
table(df$celltype, df$type)#各组不同细胞群细胞数
table(df$celltype, df$patient_id)
Cellratio <- prop.table(table(df$celltype,df$patient_id),margin = 2)#计算各组样本不同细胞群比例
Cellratio <- as.data.frame(Cellratio)
#长数据变宽数据
library(tidyr)
library(tidyverse)
wide_df <- pivot_wider(Cellratio, names_from = Var1, values_from = Freq)
wide_df$Var2 <- as.character(wide_df$Var2)

#wide_df <- rownames_to_column(wide_df, var = "Var2")
class(wide_df$Var2)
rownames(wide_df) <- wide_df$Var2
wide_df <- wide_df[,-1]
rownames(wide_df2) <- factor(rownames(wide_df2))
colnames(wide_df2) <- factor(colnames(wide_df2))

#画图
library(pheatmap)
wide_df2 <- cor(wide_df, method= "spearman")
dev.new()
pheatmap(wide_df2,cluster_cols = F,cluster_rows = F,
         #filename = "immune_celltype_cor_J.pdf",width = 8,height = 8,
         color = colorRampPalette(c("navy", "white", "firebrick3"))(50))
wide_df2_T <- wide_df2
testRes = cor.mtest(wide_df, conf.level = 0.95)
library(corrplot)
corrplot(wide_df2, 
         type="upper",
         tl.col="black",  p.mat = testRes$p,
         tl.srt=45, insig='blank', # 不显著留空
         col =  colorRampPalette(c("navy", "white", "firebrick3"))(50)
)
corrplot(wide_df2, p.mat = testRes$p,
         col =  colorRampPalette(c("navy", "white", "firebrick3"))(50),
         method = 'color', diag = FALSE,  tl.col="black",
         type = 'upper', sig.level = c(0.001, 0.01, 0.05), pch.cex = 1.5, insig = 'label_sig', pch.col = 'grey20')

#15x15
?corrplot()
#差异图
df <- wide_df2_J-wide_df2_T
pheatmap(df,cluster_cols = F,cluster_rows = F,
         #filename = "immune_celltype_cor_J.pdf",width = 8,height = 8,
         color = colorRampPalette(c("navy", "white", "firebrick3"))(50))

#提取出P3_J_formia####
sce_P03_J <- subset(sce, cells = colnames(sce)[which(sce$patient_id %in% c("P03_J"))])
#将细胞进行归纳
sce_P03_J$celltype <- "Unknown"
sce_P03_J$celltype[which(sce_P03_J$celltypedb%in%c("CD4+T_c0_Tcm_ANXA1", 
                                                   "CD4+T_c1_Tcm_GPR183", 
                                                   "CD4+T_c2_Treg_FAAH2",
                                                   "CD4+T_c3_naive_TCF7",
                                                   "CD4+T_c4_Treg_FOXP3", 
                                                   "CD4+T_c5_helper_CXCL13",
                                                   "CD8+T_c0_effector_GZMK", 
                                                   "CD8+T_c1_MAIT_CCL20", 
                                                   "CD8+T_c2_exhausted_LAG3hi", 
                                                   "CD8+T_c3_naive_CCR7", 
                                                   "CD8+T_c4_memory_ZNF683", 
                                                   "CD8+T_c5_effector_GZMK", 
                                                   "CD8+T_c6_prolif_MKI67", 
                                                   "CD8+T_c7_MAIT_SLC4A10", 
                                                   "CD8+T_c8_resident_CD69", 
                                                   "CD8+T_c9_IFNR_IFIT2",
                                                   "DNT"))] <- "T_cell"
sce_P03_J$celltype[which(sce_P03_J$celltypedb%in%c("Plasma_B",
                                                   "Naive_B_IgD",
                                                   "Memory_B", 
                                                   "Cycling_plasma"))] <- "B_cell"
sce_P03_J$celltype[which(sce_P03_J$celltypedb%in%c("Cholangiocyte"))] <- "Cholangiocyte"
sce_P03_J$celltype[which(sce_P03_J$celltypedb%in%c("cDC1",
                                                   "cDC2",
                                                   "LAMP3_DC",
                                                   "pDC"))] <- "DC"
sce_P03_J$celltype[which(sce_P03_J$celltypedb%in%c("Endothelial"))] <- "Endothelial"
sce_P03_J$celltype[which(sce_P03_J$celltypedb%in%c("Fibroblast"))] <- "Fibroblast"
sce_P03_J$celltype[which(sce_P03_J$celltypedb%in%c("Hepatocyte"))] <- "Hepatocyte"
sce_P03_J$celltype[which(sce_P03_J$celltypedb%in%c( "C1QA_Macro", 
                                                    "SPP1_Macro",
                                                    "IL1B_Macro",
                                                    "Proliferating_Macro"))] <- "Macrophage"
sce_P03_J$celltype[which(sce_P03_J$celltypedb%in%c("Mono_c0_S100A9", 
                                                   "Mono_c1_HLA-DPB1", 
                                                   "Mono_c2_FCGR3A", 
                                                   "Mono_c3_TNF"))] <- "Monocyte"
sce_P03_J$celltype[which(sce_P03_J$celltypedb%in%c("N0_CCL4", 
                                                   "N1_S100A8", 
                                                   "N2_IFIT1"))] <- "Neutrophil"
sce_P03_J$celltype[which(sce_P03_J$celltypedb%in%c("NK_c0_CD56dimCD16hi", 
                                                   "NK_c1_CD56dimCD16lo", 
                                                   "NK_c2_CD56bright_CD16lo_CD160hi", 
                                                   "NK_c3_CD56dim_CD16hi_CD160", 
                                                   "NK_c4_CD56bright_XCL1"))] <- "NK_cell"
sce_P03_J$celltype[which(sce_P03_J$celltypedb%in%c("Tumor_cell"))] <- "Tumor_cell"
sce_P03_J$celltype[which(sce_P03_J$celltypedb%in%c("Mast_cell"))] <- "Mast_cell"
table(sce_P03_J$celltypedb)
table(sce_P03_J$celltype)
table(sce_P03_J$celltype,sce_P03_J$celltypedb)
table(sce_P03_J$celltypedb,sce_P03_J$celltype)
#去掉unknown
sce_P03_J <- subset(sce_P03_J, cells = colnames(sce_P03_J)[which(!sce_P03_J$celltype %in% c("Unknown"))])
table(sce_P03_J$celltype)
save(sce_P03_J,file="sce_P03_J_mia.Rdata")

#特殊颜色####
scale_color_viridis_c(labels = c("0", "0.25", 
                                 "0.5", "0.75", "1.0"))
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_viridis_c()
table(sce$celltypedb,sce$patient_id)
#提取出P06_for_mia####
sce_P06 <- subset(sce, cells = colnames(sce)[which(sce$patient %in% c("P06"))])
table(sce_P06$celltypedb)
Hepa <- subset(sce, cells = colnames(sce)[which(sce$celltypedb %in% c("Hepatocyte"))])
sce_P06 <-  merge(sce_P06,
                  y = c(Hepa),
                  project = "merge"
)
#将细胞进行归纳
sce_P06$celltype <- "Unknown"
sce_P06$celltype[which(sce_P06$celltypedb%in%c("CD4+T_c0_Tcm_ANXA1", 
                                               "CD4+T_c1_Tcm_GPR183", 
                                               "CD4+T_c2_Treg_FAAH2",
                                               "CD4+T_c3_naive_TCF7",
                                               "CD4+T_c4_Treg_FOXP3", 
                                               "CD4+T_c5_helper_CXCL13",
                                               "CD8+T_c0_effector_GZMK", 
                                               "CD8+T_c1_MAIT_CCL20", 
                                               "CD8+T_c2_exhausted_LAG3hi", 
                                               "CD8+T_c3_naive_CCR7", 
                                               "CD8+T_c4_memory_ZNF683", 
                                               "CD8+T_c5_effector_GZMK", 
                                               "CD8+T_c6_prolif_MKI67", 
                                               "CD8+T_c7_MAIT_SLC4A10", 
                                               "CD8+T_c8_resident_CD69", 
                                               "CD8+T_c9_IFNR_IFIT2",
                                               "DNT"))] <- "T_cell"
sce_P06$celltype[which(sce_P06$celltypedb%in%c("Plasma_B",
                                               "Naive_B_IgD",
                                               "Memory_B", 
                                               "Cycling_plasma"))] <- "B_cell"
sce_P06$celltype[which(sce_P06$celltypedb%in%c("Cholangiocyte"))] <- "Cholangiocyte"
sce_P06$celltype[which(sce_P06$celltypedb%in%c("cDC1",
                                               "cDC2",
                                               "LAMP3_DC",
                                               "pDC"))] <- "DC"
sce_P06$celltype[which(sce_P06$celltypedb%in%c("Endothelial"))] <- "Endothelial"
sce_P06$celltype[which(sce_P06$celltypedb%in%c("Fibroblast"))] <- "Fibroblast"
sce_P06$celltype[which(sce_P06$celltypedb%in%c("Hepatocyte"))] <- "Hepatocyte"
sce_P06$celltype[which(sce_P06$celltypedb%in%c( "C1QA_Macro", 
                                                "SPP1_Macro",
                                                "IL1B_Macro",
                                                "Proliferating_Macro"))] <- "Macrophage"
sce_P06$celltype[which(sce_P06$celltypedb%in%c("Mono_c0_S100A9", 
                                               "Mono_c1_HLA-DPB1", 
                                               "Mono_c2_FCGR3A", 
                                               "Mono_c3_TNF"))] <- "Monocyte"
sce_P06$celltype[which(sce_P06$celltypedb%in%c("N0_CCL4", 
                                               "N1_S100A8", 
                                               "N2_IFIT1"))] <- "Neutrophil"
sce_P06$celltype[which(sce_P06$celltypedb%in%c("NK_c0_CD56dimCD16hi", 
                                               "NK_c1_CD56dimCD16lo", 
                                               "NK_c2_CD56bright_CD16lo_CD160hi", 
                                               "NK_c3_CD56dim_CD16hi_CD160", 
                                               "NK_c4_CD56bright_XCL1"))] <- "NK_cell"
sce_P06$celltype[which(sce_P06$celltypedb%in%c("Tumor_cell"))] <- "Tumor_cell"
sce_P06$celltype[which(sce_P06$celltypedb%in%c("Mast_cell"))] <- "Mast_cell"
table(sce_P06$celltypedb)
table(sce_P06$celltype)
table(sce_P06$celltype,sce_P06$celltypedb)
table(sce_P06$celltypedb,sce_P06$celltype)
#去掉unknown
sce_P06 <- subset(sce_P06, cells = colnames(sce_P06)[which(!sce_P06$celltype %in% c("Unknown"))])
table(sce_P06$celltype)
table(sce$celltypedb)
save(sce_P06,file="sce_P06_mia.Rdata")


#提取出P01_for_mia####
sce_P01 <- subset(sce, cells = colnames(sce)[which(sce$patient %in% c("P01"))])
table(sce_P01$celltypedb)
# Hepa <- subset(sce, cells = colnames(sce)[which(sce$celltypedb %in% c("Hepatocyte"))])
# sce_P01 <-  merge(sce_P01,
#                   y = c(Hepa),
#                   project = "merge"
# )
#将细胞进行归纳
sce_P01$celltype <- "Unknown"
sce_P01$celltype[which(sce_P01$celltypedb%in%c("CD4+T_c0_Tcm_ANXA1", 
                                               "CD4+T_c1_Tcm_GPR183", 
                                               "CD4+T_c2_Treg_FAAH2",
                                               "CD4+T_c3_naive_TCF7",
                                               "CD4+T_c4_Treg_FOXP3", 
                                               "CD4+T_c5_helper_CXCL13",
                                               "CD8+T_c0_effector_GZMK", 
                                               "CD8+T_c1_MAIT_CCL20", 
                                               "CD8+T_c2_exhausted_LAG3hi", 
                                               "CD8+T_c3_naive_CCR7", 
                                               "CD8+T_c4_memory_ZNF683", 
                                               "CD8+T_c5_effector_GZMK", 
                                               "CD8+T_c6_prolif_MKI67", 
                                               "CD8+T_c7_MAIT_SLC4A10", 
                                               "CD8+T_c8_resident_CD69", 
                                               "CD8+T_c9_IFNR_IFIT2",
                                               "DNT"))] <- "T_cell"
sce_P01$celltype[which(sce_P01$celltypedb%in%c("Plasma_B",
                                               "Naive_B_IgD",
                                               "Memory_B", 
                                               "Cycling_plasma"))] <- "B_cell"
sce_P01$celltype[which(sce_P01$celltypedb%in%c("Cholangiocyte"))] <- "Cholangiocyte"
sce_P01$celltype[which(sce_P01$celltypedb%in%c("cDC1",
                                               "cDC2",
                                               "LAMP3_DC",
                                               "pDC"))] <- "DC"
sce_P01$celltype[which(sce_P01$celltypedb%in%c("Endothelial"))] <- "Endothelial"
sce_P01$celltype[which(sce_P01$celltypedb%in%c("Fibroblast"))] <- "Fibroblast"
sce_P01$celltype[which(sce_P01$celltypedb%in%c("Hepatocyte"))] <- "Hepatocyte"
sce_P01$celltype[which(sce_P01$celltypedb%in%c( "C1QA_Macro", 
                                                "SPP1_Macro",
                                                "IL1B_Macro",
                                                "Proliferating_Macro"))] <- "Macrophage"
sce_P01$celltype[which(sce_P01$celltypedb%in%c("Mono_c0_S100A9", 
                                               "Mono_c1_HLA-DPB1", 
                                               "Mono_c2_FCGR3A", 
                                               "Mono_c3_TNF"))] <- "Monocyte"
sce_P01$celltype[which(sce_P01$celltypedb%in%c("N0_CCL4", 
                                               "N1_S100A8", 
                                               "N2_IFIT1"))] <- "Neutrophil"
sce_P01$celltype[which(sce_P01$celltypedb%in%c("NK_c0_CD56dimCD16hi", 
                                               "NK_c1_CD56dimCD16lo", 
                                               "NK_c2_CD56bright_CD16lo_CD160hi", 
                                               "NK_c3_CD56dim_CD16hi_CD160", 
                                               "NK_c4_CD56bright_XCL1"))] <- "NK_cell"
sce_P01$celltype[which(sce_P01$celltypedb%in%c("Tumor_cell"))] <- "Tumor_cell"
sce_P01$celltype[which(sce_P01$celltypedb%in%c("Mast_cell"))] <- "Mast_cell"
table(sce_P01$celltypedb)
table(sce_P01$celltype)
table(sce_P01$celltype,sce_P01$celltypedb)
table(sce_P01$celltypedb,sce_P01$celltype)
#去掉unknown
sce_P01 <- subset(sce_P01, cells = colnames(sce_P01)[which(!sce_P01$celltype %in% c("Unknown"))])
table(sce_P01$celltype)
table(sce$celltypedb)
save(sce_P01,file="sce_P01_mia.Rdata")
#提取出P02_for_mia####
sce_P02 <- subset(sce, cells = colnames(sce)[which(sce$patient %in% c("P02"))])
table(sce_P02$celltypedb)
Hepa <- subset(sce, cells = colnames(sce)[which(sce$celltypedb %in% c("Hepatocyte"))])
sce_P02 <-  merge(sce_P02,
                  y = c(Hepa),
                  project = "merge"
)
#将细胞进行归纳
sce_P02$celltype <- "Unknown"
sce_P02$celltype[which(sce_P02$celltypedb%in%c("CD4+T_c0_Tcm_ANXA1", 
                                               "CD4+T_c1_Tcm_GPR183", 
                                               "CD4+T_c2_Treg_FAAH2",
                                               "CD4+T_c3_naive_TCF7",
                                               "CD4+T_c4_Treg_FOXP3", 
                                               "CD4+T_c5_helper_CXCL13",
                                               "CD8+T_c0_effector_GZMK", 
                                               "CD8+T_c1_MAIT_CCL20", 
                                               "CD8+T_c2_exhausted_LAG3hi", 
                                               "CD8+T_c3_naive_CCR7", 
                                               "CD8+T_c4_memory_ZNF683", 
                                               "CD8+T_c5_effector_GZMK", 
                                               "CD8+T_c6_prolif_MKI67", 
                                               "CD8+T_c7_MAIT_SLC4A10", 
                                               "CD8+T_c8_resident_CD69", 
                                               "CD8+T_c9_IFNR_IFIT2",
                                               "DNT"))] <- "T_cell"
sce_P02$celltype[which(sce_P02$celltypedb%in%c("Plasma_B",
                                               "Naive_B_IgD",
                                               "Memory_B", 
                                               "Cycling_plasma"))] <- "B_cell"
sce_P02$celltype[which(sce_P02$celltypedb%in%c("Cholangiocyte"))] <- "Cholangiocyte"
sce_P02$celltype[which(sce_P02$celltypedb%in%c("cDC1",
                                               "cDC2",
                                               "LAMP3_DC",
                                               "pDC"))] <- "DC"
sce_P02$celltype[which(sce_P02$celltypedb%in%c("Endothelial"))] <- "Endothelial"
sce_P02$celltype[which(sce_P02$celltypedb%in%c("Fibroblast"))] <- "Fibroblast"
sce_P02$celltype[which(sce_P02$celltypedb%in%c("Hepatocyte"))] <- "Hepatocyte"
sce_P02$celltype[which(sce_P02$celltypedb%in%c( "C1QA_Macro", 
                                                "SPP1_Macro",
                                                "IL1B_Macro",
                                                "Proliferating_Macro"))] <- "Macrophage"
sce_P02$celltype[which(sce_P02$celltypedb%in%c("Mono_c0_S100A9", 
                                               "Mono_c1_HLA-DPB1", 
                                               "Mono_c2_FCGR3A", 
                                               "Mono_c3_TNF"))] <- "Monocyte"
sce_P02$celltype[which(sce_P02$celltypedb%in%c("N0_CCL4", 
                                               "N1_S100A8", 
                                               "N2_IFIT1"))] <- "Neutrophil"
sce_P02$celltype[which(sce_P02$celltypedb%in%c("NK_c0_CD56dimCD16hi", 
                                               "NK_c1_CD56dimCD16lo", 
                                               "NK_c2_CD56bright_CD16lo_CD160hi", 
                                               "NK_c3_CD56dim_CD16hi_CD160", 
                                               "NK_c4_CD56bright_XCL1"))] <- "NK_cell"
sce_P02$celltype[which(sce_P02$celltypedb%in%c("Tumor_cell"))] <- "Tumor_cell"
sce_P02$celltype[which(sce_P02$celltypedb%in%c("Mast_cell"))] <- "Mast_cell"
table(sce_P02$celltypedb)
table(sce_P02$celltype)
table(sce_P02$celltype,sce_P02$celltypedb)
table(sce_P02$celltypedb,sce_P02$celltype)
#去掉unknown
sce_P02 <- subset(sce_P02, cells = colnames(sce_P02)[which(!sce_P02$celltype %in% c("Unknown"))])
table(sce_P02$celltype)
table(sce$celltypedb)
save(sce_P02,file="sce_P02_mia.Rdata")

#提取出P3_J_formia####
sce_P03 <- subset(sce, cells = colnames(sce)[which(sce$patient %in% c("P03"))])
table(sce_P03$celltypedb)
#将细胞进行归纳
sce_P03$celltype <- "Unknown"
sce_P03$celltype[which(sce_P03$celltypedb%in%c("CD4+T_c0_Tcm_ANXA1", 
                                               "CD4+T_c1_Tcm_GPR183", 
                                               "CD4+T_c2_Treg_FAAH2",
                                               "CD4+T_c3_naive_TCF7",
                                               "CD4+T_c4_Treg_FOXP3", 
                                               "CD4+T_c5_helper_CXCL13",
                                               "CD8+T_c0_effector_GZMK", 
                                               "CD8+T_c1_MAIT_CCL20", 
                                               "CD8+T_c2_exhausted_LAG3hi", 
                                               "CD8+T_c3_naive_CCR7", 
                                               "CD8+T_c4_memory_ZNF683", 
                                               "CD8+T_c5_effector_GZMK", 
                                               "CD8+T_c6_prolif_MKI67", 
                                               "CD8+T_c7_MAIT_SLC4A10", 
                                               "CD8+T_c8_resident_CD69", 
                                               "CD8+T_c9_IFNR_IFIT2",
                                               "DNT"))] <- "T_cell"
sce_P03$celltype[which(sce_P03$celltypedb%in%c("Plasma_B",
                                               "Naive_B_IgD",
                                               "Memory_B", 
                                               "Cycling_plasma"))] <- "B_cell"
sce_P03$celltype[which(sce_P03$celltypedb%in%c("Cholangiocyte"))] <- "Cholangiocyte"
sce_P03$celltype[which(sce_P03$celltypedb%in%c("cDC1",
                                               "cDC2",
                                               "LAMP3_DC",
                                               "pDC"))] <- "DC"
sce_P03$celltype[which(sce_P03$celltypedb%in%c("Endothelial"))] <- "Endothelial"
sce_P03$celltype[which(sce_P03$celltypedb%in%c("Fibroblast"))] <- "Fibroblast"
sce_P03$celltype[which(sce_P03$celltypedb%in%c("Hepatocyte"))] <- "Hepatocyte"
sce_P03$celltype[which(sce_P03$celltypedb%in%c( "C1QA_Macro", 
                                                "SPP1_Macro",
                                                "IL1B_Macro",
                                                "Proliferating_Macro"))] <- "Macrophage"
sce_P03$celltype[which(sce_P03$celltypedb%in%c("Mono_c0_S100A9", 
                                               "Mono_c1_HLA-DPB1", 
                                               "Mono_c2_FCGR3A", 
                                               "Mono_c3_TNF"))] <- "Monocyte"
sce_P03$celltype[which(sce_P03$celltypedb%in%c("N0_CCL4", 
                                               "N1_S100A8", 
                                               "N2_IFIT1"))] <- "Neutrophil"
sce_P03$celltype[which(sce_P03$celltypedb%in%c("NK_c0_CD56dimCD16hi", 
                                               "NK_c1_CD56dimCD16lo", 
                                               "NK_c2_CD56bright_CD16lo_CD160hi", 
                                               "NK_c3_CD56dim_CD16hi_CD160", 
                                               "NK_c4_CD56bright_XCL1"))] <- "NK_cell"
sce_P03$celltype[which(sce_P03$celltypedb%in%c("Tumor_cell"))] <- "Tumor_cell"
sce_P03$celltype[which(sce_P03$celltypedb%in%c("Mast_cell"))] <- "Mast_cell"
table(sce_P03$celltypedb)
table(sce_P03$celltype)
table(sce_P03$celltype,sce_P03$celltypedb)
table(sce_P03$celltypedb,sce_P03$celltype)
#去掉unknown
sce_P03 <- subset(sce_P03, cells = colnames(sce_P03)[which(!sce_P03$celltype %in% c("Unknown"))])
table(sce_P03$celltype)
save(sce_P03,file="sce_P03_mia.Rdata")
#提取出P5_J_formia####
sce_P05 <- subset(sce, cells = colnames(sce)[which(sce$patient %in% c("P05"))])
table(sce_P05$celltypedb)
#将细胞进行归纳
sce_P05$celltype <- "Unknown"
sce_P05$celltype[which(sce_P05$celltypedb%in%c("CD4+T_c0_Tcm_ANXA1", 
                                               "CD4+T_c1_Tcm_GPR183", 
                                               "CD4+T_c2_Treg_FAAH2",
                                               "CD4+T_c3_naive_TCF7",
                                               "CD4+T_c4_Treg_FOXP3", 
                                               "CD4+T_c5_helper_CXCL13",
                                               "CD8+T_c0_effector_GZMK", 
                                               "CD8+T_c1_MAIT_CCL20", 
                                               "CD8+T_c2_exhausted_LAG3hi", 
                                               "CD8+T_c3_naive_CCR7", 
                                               "CD8+T_c4_memory_ZNF683", 
                                               "CD8+T_c5_effector_GZMK", 
                                               "CD8+T_c6_prolif_MKI67", 
                                               "CD8+T_c7_MAIT_SLC4A10", 
                                               "CD8+T_c8_resident_CD69", 
                                               "CD8+T_c9_IFNR_IFIT2",
                                               "DNT"))] <- "T_cell"
sce_P05$celltype[which(sce_P05$celltypedb%in%c("Plasma_B",
                                               "Naive_B_IgD",
                                               "Memory_B", 
                                               "Cycling_plasma"))] <- "B_cell"
sce_P05$celltype[which(sce_P05$celltypedb%in%c("Cholangiocyte"))] <- "Cholangiocyte"
sce_P05$celltype[which(sce_P05$celltypedb%in%c("cDC1",
                                               "cDC2",
                                               "LAMP3_DC",
                                               "pDC"))] <- "DC"
sce_P05$celltype[which(sce_P05$celltypedb%in%c("Endothelial"))] <- "Endothelial"
sce_P05$celltype[which(sce_P05$celltypedb%in%c("Fibroblast"))] <- "Fibroblast"
sce_P05$celltype[which(sce_P05$celltypedb%in%c("Hepatocyte"))] <- "Hepatocyte"
sce_P05$celltype[which(sce_P05$celltypedb%in%c( "C1QA_Macro", 
                                                "SPP1_Macro",
                                                "IL1B_Macro",
                                                "Proliferating_Macro"))] <- "Macrophage"
sce_P05$celltype[which(sce_P05$celltypedb%in%c("Mono_c0_S100A9", 
                                               "Mono_c1_HLA-DPB1", 
                                               "Mono_c2_FCGR3A", 
                                               "Mono_c3_TNF"))] <- "Monocyte"
sce_P05$celltype[which(sce_P05$celltypedb%in%c("N0_CCL4", 
                                               "N1_S100A8", 
                                               "N2_IFIT1"))] <- "Neutrophil"
sce_P05$celltype[which(sce_P05$celltypedb%in%c("NK_c0_CD56dimCD16hi", 
                                               "NK_c1_CD56dimCD16lo", 
                                               "NK_c2_CD56bright_CD16lo_CD160hi", 
                                               "NK_c3_CD56dim_CD16hi_CD160", 
                                               "NK_c4_CD56bright_XCL1"))] <- "NK_cell"
sce_P05$celltype[which(sce_P05$celltypedb%in%c("Tumor_cell"))] <- "Tumor_cell"
sce_P05$celltype[which(sce_P05$celltypedb%in%c("Mast_cell"))] <- "Mast_cell"
table(sce_P05$celltypedb)
table(sce_P05$celltype)
table(sce_P05$celltype,sce_P05$celltypedb)
table(sce_P05$celltypedb,sce_P05$celltype)
#去掉unknown
sce_P05 <- subset(sce_P05, cells = colnames(sce_P05)[which(!sce_P05$celltype %in% c("Unknown"))])
table(sce_P05$celltype)
save(sce_P05,file="sce_P05_mia.Rdata")
#提取出P01_for_mia####
Idents(sce) <- "type"
sce_nichenet <- subset(sce, cells = colnames(sce)[which(sce$type %in% c("J","T"))])
sce_nichenet$type <- as.character(sce_nichenet$type)
table(sce_nichenet$type)
sce_nichenet$type <- factor(sce_nichenet$type,levels=c("J","T"))
table(sce_nichenet$type)
# Hepa <- subset(sce, cells = colnames(sce)[which(sce$celltypedb %in% c("Hepatocyte"))])
# sce_nichenet <-  merge(sce_nichenet,
#                   y = c(Hepa),
#                   project = "merge"
# )
#将细胞进行归纳
sce_nichenet$celltype <- "Unknown"
sce_nichenet$celltype[which(sce_nichenet$celltypedb%in%c("CD4+T_c0_Tcm_ANXA1", 
                                                         "CD4+T_c1_Tcm_GPR183", 
                                                         "CD4+T_c2_Treg_FAAH2",
                                                         "CD4+T_c3_naive_TCF7",
                                                         "CD4+T_c4_Treg_FOXP3", 
                                                         "CD4+T_c5_helper_CXCL13",
                                                         "CD8+T_c0_effector_GZMK", 
                                                         "CD8+T_c1_MAIT_CCL20", 
                                                         "CD8+T_c2_exhausted_LAG3hi", 
                                                         "CD8+T_c3_naive_CCR7", 
                                                         "CD8+T_c4_memory_ZNF683", 
                                                         "CD8+T_c5_effector_GZMK", 
                                                         "CD8+T_c6_prolif_MKI67", 
                                                         "CD8+T_c7_MAIT_SLC4A10", 
                                                         "CD8+T_c8_resident_CD69", 
                                                         "CD8+T_c9_IFNR_IFIT2",
                                                         "DNT"))] <- "T_cell"
sce_nichenet$celltype[which(sce_nichenet$celltypedb%in%c("Plasma_B",
                                                         "Naive_B_IgD",
                                                         "Memory_B", 
                                                         "Cycling_plasma"))] <- "B_cell"
sce_nichenet$celltype[which(sce_nichenet$celltypedb%in%c("Cholangiocyte"))] <- "Cholangiocyte"
sce_nichenet$celltype[which(sce_nichenet$celltypedb%in%c("cDC1",
                                                         "cDC2",
                                                         "LAMP3_DC",
                                                         "pDC"))] <- "DC"
sce_nichenet$celltype[which(sce_nichenet$celltypedb%in%c("Endothelial"))] <- "Endothelial"
sce_nichenet$celltype[which(sce_nichenet$celltypedb%in%c("Fibroblast"))] <- "Fibroblast"
sce_nichenet$celltype[which(sce_nichenet$celltypedb%in%c("Hepatocyte"))] <- "Hepatocyte"
sce_nichenet$celltype[which(sce_nichenet$celltypedb%in%c( "C1QA_Macro", 
                                                          "SPP1_Macro",
                                                          "IL1B_Macro",
                                                          "Proliferating_Macro"))] <- "Macrophage"
sce_nichenet$celltype[which(sce_nichenet$celltypedb%in%c("Mono_c0_S100A9", 
                                                         "Mono_c1_HLA-DPB1", 
                                                         "Mono_c2_FCGR3A", 
                                                         "Mono_c3_TNF"))] <- "Monocyte"
sce_nichenet$celltype[which(sce_nichenet$celltypedb%in%c("N0_CCL4", 
                                                         "N1_S100A8", 
                                                         "N2_IFIT1"))] <- "Neutrophil"
sce_nichenet$celltype[which(sce_nichenet$celltypedb%in%c("NK_c0_CD56dimCD16hi", 
                                                         "NK_c1_CD56dimCD16lo", 
                                                         "NK_c2_CD56bright_CD16lo_CD160hi", 
                                                         "NK_c3_CD56dim_CD16hi_CD160", 
                                                         "NK_c4_CD56bright_XCL1"))] <- "NK_cell"
sce_nichenet$celltype[which(sce_nichenet$celltypedb%in%c("Tumor_cell"))] <- "Tumor_cell"
sce_nichenet$celltype[which(sce_nichenet$celltypedb%in%c("Mast_cell"))] <- "Mast_cell"
table(sce_nichenet$celltypedb)
table(sce_nichenet$celltype)
table(sce_nichenet$celltype,sce_nichenet$celltypedb)
table(sce_nichenet$celltypedb,sce_nichenet$celltype)
#去掉unknown
sce_nichenet <- subset(sce_nichenet, cells = colnames(sce_nichenet)[which(!sce_nichenet$celltype %in% c("Unknown"))])
table(sce_nichenet$celltype)
table(sce$celltypedb)
save(sce_nichenet,file="sce_nichenet_mia.Rdata")
#提取出P06_for_mia####
sce_P06 <- subset(sce, cells = colnames(sce)[which(sce$patient %in% c("P06"))])
table(sce_P06$celltypedb)
Hepa <- subset(sce, cells = colnames(sce)[which(sce$celltypedb %in% c("Hepatocyte"))])
sce_P06 <-  merge(sce_P06,
                  y = c(Hepa),
                  project = "merge"
)
#将细胞进行归纳
sce_P06$celltype <- "Unknown"
sce_P06$celltype[which(sce_P06$celltypedb%in%c("CD4+T_c0_Tcm_ANXA1", 
                                               "CD4+T_c1_Tcm_GPR183", 
                                               "CD4+T_c2_Treg_FAAH2",
                                               "CD4+T_c3_naive_TCF7",
                                               "CD4+T_c4_Treg_FOXP3", 
                                               "CD4+T_c5_helper_CXCL13",
                                               "CD8+T_c0_effector_GZMK", 
                                               "CD8+T_c1_MAIT_CCL20", 
                                               "CD8+T_c2_exhausted_LAG3hi", 
                                               "CD8+T_c3_naive_CCR7", 
                                               "CD8+T_c4_memory_ZNF683", 
                                               "CD8+T_c5_effector_GZMK", 
                                               "CD8+T_c6_prolif_MKI67", 
                                               "CD8+T_c7_MAIT_SLC4A10", 
                                               "CD8+T_c8_resident_CD69", 
                                               "CD8+T_c9_IFNR_IFIT2",
                                               "DNT"))] <- "T_cell"
sce_P06$celltype[which(sce_P06$celltypedb%in%c("Plasma_B",
                                               "Naive_B_IgD",
                                               "Memory_B", 
                                               "Cycling_plasma"))] <- "B_cell"
sce_P06$celltype[which(sce_P06$celltypedb%in%c("Cholangiocyte"))] <- "Cholangiocyte"
sce_P06$celltype[which(sce_P06$celltypedb%in%c("cDC1",
                                               "cDC2",
                                               "LAMP3_DC",
                                               "pDC"))] <- "DC"
sce_P06$celltype[which(sce_P06$celltypedb%in%c("Endothelial"))] <- "Endothelial"
sce_P06$celltype[which(sce_P06$celltypedb%in%c("Fibroblast"))] <- "Fibroblast"
sce_P06$celltype[which(sce_P06$celltypedb%in%c("Hepatocyte"))] <- "Hepatocyte"
sce_P06$celltype[which(sce_P06$celltypedb%in%c( "C1QA_Macro", 
                                                "SPP1_Macro",
                                                "IL1B_Macro",
                                                "Proliferating_Macro"))] <- "Macrophage"
sce_P06$celltype[which(sce_P06$celltypedb%in%c("Mono_c0_S100A9", 
                                               "Mono_c1_HLA-DPB1", 
                                               "Mono_c2_FCGR3A", 
                                               "Mono_c3_TNF"))] <- "Monocyte"
sce_P06$celltype[which(sce_P06$celltypedb%in%c("N0_CCL4", 
                                               "N1_S100A8", 
                                               "N2_IFIT1"))] <- "Neutrophil"
sce_P06$celltype[which(sce_P06$celltypedb%in%c("NK_c0_CD56dimCD16hi", 
                                               "NK_c1_CD56dimCD16lo", 
                                               "NK_c2_CD56bright_CD16lo_CD160hi", 
                                               "NK_c3_CD56dim_CD16hi_CD160", 
                                               "NK_c4_CD56bright_XCL1"))] <- "NK_cell"
sce_P06$celltype[which(sce_P06$celltypedb%in%c("Tumor_cell"))] <- "Tumor_cell"
sce_P06$celltype[which(sce_P06$celltypedb%in%c("Mast_cell"))] <- "Mast_cell"
table(sce_P06$celltypedb)
table(sce_P06$celltype)
table(sce_P06$celltype,sce_P06$celltypedb)
table(sce_P06$celltypedb,sce_P06$celltype)
#去掉unknown
sce_P06 <- subset(sce_P06, cells = colnames(sce_P06)[which(!sce_P06$celltype %in% c("Unknown"))])
table(sce_P06$celltype)
table(sce$celltypedb)
save(sce_P06,file="sce_P06_mia.Rdata")

#EGFR####
rownames(sce)[grep("^VEGF-", rownames(sce))]
genes_to_check = c("EGFR","VEGFA","VEGFR1","VEGFR2","VEGFR3","VEGFB","CCL5","CSF1",
                   "NAMPT","TGFB1","BRCA1","CCL5","CCL3","IFNG","CCL3L1","CDH1"
)

DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltype')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("EGFR_markers_by_celltype.pdf",width = 6,height =9)

VlnPlot(sce, features = c("EGFR"),group.by = "celltypedb",pt.size = 0)
ggsave("EGFR.pdf",width = 12,height =3)


sce$type <- factor(sce$type,levels=c("N","J","T"))
table(sce$type)

# CCL19####
genes_to_check = c("IL7R","KLRB1","SLC4A10","CXCR6","TLR4"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("CCL19_markers_by_celltype.pdf",width = 8,height =8)
#NDRG1####
genes_to_check = c("NDRG1"
)
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by = 'celltype',cols = c("white", "red"))+coord_flip()+th

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("NDRG1_markers_by_celltype.pdf",width = 8,height =10)
#NDRG1_NJT####
DefaultAssay(sce) <- "RNA"
FeaturePlot(sce, features = c("NDRG1"),cols = c("grey","red"),reduction = "umap",raster=FALSE)+theme(aspect.ratio = 1)
#ggsave("NDRG1_umap_global.pdf",width=6,height = 6)

genes_to_check = c("NDRG1")
#P1#

allcolour=c("#B188BA","#74B38F","#DD1F4D","#FFA500","#9370DB",#1-5
            "#98FB98","#F08080","#1E90FF","#7CFC00","#FFFF00",#6-10
            "#808000","#FF00FF","#FA8072","#7B68EE","#9400D3",#11-15
            "#800080","#A0522D","#D2B48C","#D2691E","#87CEEB",#16-20
            "#40E0D0","#5F9EA0","#063A94","#0000CD","#008B8B",#21-25
            "#FFE4B5","#8A2BE2","#228B22","#E9967A","#4682B4",
            "#32CD32","#F0E68C","#FFFFE0","#EE82EE","#FF6347",
            "#6A5ACD","#9932CC","#8B008B","#8B4513","#DEB887")
Idents(sce) <- "celltypedb"
DotPlot(sce, features = unique(genes_to_check),split.by = "type",
        assay='RNA',cols = allcolour)+th
#ggsave("markers_by_celltypedb_NDRG1_P1.pdf",width = 5,height =8)
#P2
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),split.by = "type",
        assay='RNA',group.by ='celltypedb',cols = allcolour)+th
p <- DotPlot(sce, features = unique(genes_to_check),split.by = "type",
             assay='RNA',group.by ='celltypedb',cols = allcolour)+th

p
dat <-p$data
dat$group <-gsub("(.*?)\\_(.*?)", "\\2", dat$id)#取“_”后面的
dat$cell <- gsub("(_J|_N|_T)$", "", dat$id)
#dat$cell <- sub("_.*", "", dat$id)#取“_”后面的
dat$group <- factor(dat$group,levels = c("N","J","T"))
ggplot(dat, aes(x = group,
                y = cell,
                size = pct.exp,
                color = avg.exp)) +
  geom_point(alpha = 1) +
  scale_size(range = c(1, 10)) +
  scale_color_gradient(high="black",low="#FEFCFC")+
  labs(title = "NDRG1 expression",
       subtitle = "",
       x = "Group",
       y = "Cell type",
       size = "pct.exp",
       color = "avg.exp",
       fill = "avg.exp")+
  theme_classic()+
  theme(axis.line = element_blank())
ggsave("markers_by_celltypedb_NDRG1_P2.pdf",width = 4.5,height =17)



#cellnumber####
sce_T <- subset(sce, cells = colnames(sce)[which(sce$type %in% c('T'))])
df <- table(sce_T$patient_id,sce_T$celltype)
write.csv(df,file="cell_numberT.csv")


#cluster####
DefaultAssay(sce) <- "CCA"
Idents(sce) <- "celltypedb"
#去掉unknown
sce <- subset(sce, cells = colnames(sce)[which(!sce$celltypedb %in% c('Unknown',"Macrophage","DC","Neutrophil","Monocyte"))])
table(sce$celltypedb)
av.exp<- AverageExpression(sce)$CCA
# av.exp<- av.exp[which(row.names(av.exp)%in% features),]
features=names(tail(sort(apply(av.exp, 1, sd)),length(rownames(sce))))
av.exp<- av.exp[which(row.names(av.exp)%in% features),]
av.exp <- cor(av.exp, method= "spearman")
pheatmap::pheatmap(av.exp,color = colorRampPalette(c("navy", "white", "firebrick3"))(50))

#lymphocyte####
DefaultAssay(sce) <- "CCA"
Idents(sce) <- "celltypedb"
#去掉unknown
sce <- subset(sce, cells = colnames(sce)[which(!sce$celltypedb %in% c('Unknown',"Macrophage","DC","Neutrophil","Monocyte"))])
lsce <- subset(sce, cells = colnames(sce)[which(sce$celltype %in% c('B_cell',"T/NK_cell"))])
lsce <- subset(lsce, cells = colnames(lsce)[which(!lsce$celltypedb %in% c('Tumor_cell',"Hepatocyte"))])

table(lsce$celltype)
table(lsce$celltypedb)
av.exp<- AverageExpression(lsce)$CCA
# av.exp<- av.exp[which(row.names(av.exp)%in% features),]
features=names(tail(sort(apply(av.exp, 1, sd)),length(rownames(lsce))))
av.exp<- av.exp[which(row.names(av.exp)%in% features),]
av.exp <- cor(av.exp, method= "spearman")
pheatmap::pheatmap(av.exp,color = colorRampPalette(c("navy", "white", "firebrick3"))(50))
#myeloids####
DefaultAssay(sce) <- "CCA"
Idents(sce) <- "celltypedb"
#去掉unknown
table(sce$celltype)
sce <- subset(sce, cells = colnames(sce)[which(!sce$celltypedb %in% c('Unknown',"Macrophage","DC","Neutrophil","Monocyte"))])
lsce <- subset(sce, cells = colnames(sce)[which(sce$celltype %in% c('Myeloid_cell'))])
lsce <- subset(lsce, cells = colnames(lsce)[which(!lsce$celltypedb %in% c('Tumor_cell',"Hepatocyte","Cholangiocyte","Hepatocyte"))])

table(lsce$celltype)
table(lsce$celltypedb)
av.exp<- AverageExpression(lsce)$RNA
# av.exp<- av.exp[which(row.names(av.exp)%in% features),]
features=names(tail(sort(apply(av.exp, 1, sd)),length(rownames(lsce))))
av.exp<- av.exp[which(row.names(av.exp)%in% features),]
av.exp <- cor(av.exp, method= "spearman")
pheatmap::pheatmap(av.exp,color = colorRampPalette(c("navy", "white", "firebrick3"))(50))


#heatmap####
Idents(sce) <- "cellphonedb"
table(sce$celltypedb)
#去掉unknown
sce <- subset(sce, cells = colnames(sce)[which(!sce$celltypedb %in% c('Unknown',"Macrophage","DC","Neutrophil","Monocyte"))])
table(sce$celltypedb)
av.exp<- AverageExpression(sce)$RNA
View(av.exp)
DefaultAssay(sce) <- "RNA"
av.exp<- AverageExpression(sce)$RNA
DefaultAssay(sce) <- "CCA"
Idents(sce) <- "celltypedb"
table(sce$celltypedb)
av.exp<- AverageExpression(sce)$RNA
features=names(tail(sort(apply(av.exp, 1, sd)),length(rownames(sce))))
av.exp<- av.exp[which(row.names(av.exp)%in% features),]
av.exp <- cor(av.exp, method= "spearman")
pheatmap::pheatmap(av.exp,color = colorRampPalette(c("navy", "white", "firebrick3"))(50))


#jiaoji_yzg.pdf####
load("jiaoji.Rdata")

genes_to_check <- common_genes$gege

th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(sce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltypedb')+th+
  coord_flip() + 
  scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
ggsave("jiaoji_yzg.pdf",width = 15,height =15)


##原始数据保存####
save(sce,file = 'ICC9case_markers.Rdata')
#save(sce,file = 'ICC_markers.Rdata')
rm(list = ls());gc()
setwd("D:\\leadtest")
#load("ICC_markers.Rdata")
load("ICC9case_markers.Rdata")
library(Seurat)
library(ggplot2)
library(clustree)
library(cowplot)
library(dplyr)
