setwd("D:\\leadtest\\immune")
#retract myeloids#
library(Seurat)
library(ggplot2)
library(clustree)
library(cowplot)
library(dplyr)
load("isce.raw.Rdata")
table(isce$celltype)
msce <- subset(isce, cells = colnames(isce)[which(isce$celltype %in% c('Myeloid_cell'))])
setwd("D:\\leadtest\\immune\\myeloid")
msce$type <- factor(msce$type,c("N","J","T"))
table(msce$type)
table(msce$celltype)

save(msce,file="msce_raw.Rdata")
load("msce_raw.Rdata")

name = "Myeloid_cell"
#reclustering####
#CCA####
msce = FindVariableFeatures(msce)
msce = ScaleData(msce#,vars.to.regress = c("nFeature_RNA", "percent_mito")
                 )
msce = RunPCA(msce, npcs = 50)
msce = RunTSNE(msce, dims = 1:20)
msce = RunUMAP(msce, dims = 1:20)
ElbowPlot(msce, ndims=50, reduction="pca")
dim(msce) 
msce
msce.list <- SplitObject(msce, split.by = "patient_id")
msce.list
for (i in 1:length(msce.list)) {
  print(i)
  msce.list[[i]] <- NormalizeData(msce.list[[i]], verbose = FALSE)
  msce.list[[i]] <- FindVariableFeatures(msce.list[[i]], selection.method = "vst", 
                                         nfeatures = 2000, verbose = FALSE)
}
#
alldata.anchors <- FindIntegrationAnchors(object.list = msce.list, dims = 1:40, 
                                          reduction = "cca")
msce.int <- IntegrateData(anchorset = alldata.anchors, dims = 1:40, new.assay.name = "CCA")
names(msce.int@assays)
msce.int@active.assay
msce.int=ScaleData(msce.int)
msce.int=RunPCA(msce.int, npcs = 50)
msce.int=RunUMAP(msce.int, dims = 1:20)
names(msce.int@reductions)
names(msce@reductions)
colnames(msce@meta.data) 

p1.compare=plot_grid(ncol = 2,
                     DimPlot(msce, reduction = "pca", group.by = "orig.ident")+NoAxes()+ggtitle("PCA raw_data"),                 
                     DimPlot(msce, reduction = "umap", group.by = "orig.ident")+NoAxes()+ggtitle("UMAP raw_data"),
                     DimPlot(msce.int, reduction = "pca", group.by = "orig.ident")+NoAxes()+ggtitle("PCA integrated"),
                     DimPlot(msce.int, reduction = "umap", group.by = "orig.ident")+NoAxes()+ggtitle("UMAP integrated")
)
p1.compare
ggsave(plot=p1.compare,filename=paste0(name,"_Before&After_int.pdf"),width = 18,height = 12)
msce=msce.int
msce@active.assay

msce=FindNeighbors(msce, dims = 1:20, k.param = 60, prune.SNN = 1/15)
for (res in c(0.01, 0.05, 0.1, 0.2, 0.3, 0.5, 0.8,1,1.5,2,2.5,3)) {
  msce=FindClusters(msce, graph.name = "CCA_snn", resolution = res, algorithm = 1)
}
apply(msce@meta.data[,grep("CCA_snn_res",colnames(msce@meta.data))],2,table)

p1_dim=plot_grid(ncol = 3, 
                 DimPlot(msce, reduction = "umap", group.by = "CCA_snn_res.0.01") + ggtitle("louvain_0.01"), 
                 DimPlot(msce, reduction = "umap", group.by = "CCA_snn_res.0.05") + ggtitle("louvain_0.05"), 
                 DimPlot(msce, reduction = "umap", group.by = "CCA_snn_res.0.1") +  ggtitle("louvain_0.1"),
                 DimPlot(msce, reduction = "umap", group.by = "CCA_snn_res.0.2") +  ggtitle("louvain_0.2"), 
                 DimPlot(msce, reduction = "umap", group.by = "CCA_snn_res.0.3") +  ggtitle("louvain_0.3"), 
                 DimPlot(msce, reduction = "umap", group.by = "CCA_snn_res.0.5") +  ggtitle("louvain_0.5") 
)
p1_dim
ggsave(plot=p1_dim, filename=paste0(name,"_Dimplot_diff_resolution_low.pdf"),width = 14,height = 12)

p1_dim=plot_grid(ncol = 3, 
                 DimPlot(msce, reduction = "umap", group.by = "CCA_snn_res.0.8") + ggtitle("louvain_0.8"), 
                 DimPlot(msce, reduction = "umap", group.by = "CCA_snn_res.1") +   ggtitle("louvain_1"), 
                 DimPlot(msce, reduction = "umap", group.by = "CCA_snn_res.1.5") + ggtitle("louvain_1.5"), 
                 DimPlot(msce, reduction = "umap", group.by = "CCA_snn_res.2") +   ggtitle("louvain_2"),
                 DimPlot(msce, reduction = "umap", group.by = "CCA_snn_res.2.5") + ggtitle("louvain_2.5"), 
                 DimPlot(msce, reduction = "umap", group.by = "CCA_snn_res.3") +   ggtitle("louvain_3")
)
p1_dim
ggsave(plot=p1_dim, filename=paste0(name,"_Dimplot_diff_resolution_high.pdf"),height = 12,width = 18)


tree=clustree(msce@meta.data, prefix = "CCA_snn_res.")
tree
ggsave(plot=tree, filename=paste0(name,"_Tree_diff_resolution.pdf"),width = 12,height = 12)

#set resolution#### 
sel.clust = "CCA_snn_res.1"
msce <- SetIdent(msce, value = sel.clust)
msce@active.ident <- factor(msce@active.ident,levels = c(0:(length(table(msce@active.ident))-1)))

table(msce@active.ident)
msce.markers <- FindAllMarkers(object = msce, only.pos = TRUE, min.pct = 0.25, 
                               thresh.use = 0.25)
write.csv(msce.markers,"msce.markers.csv")
library(dplyr) 
top5 <- msce.markers %>% group_by(cluster) %>% top_n(5, avg_log2FC)
genes_to_check =top5$gene

#实际使用图
th=theme(axis.text.x = element_text(angle = 90)) 
DotPlot(msce, features = unique(genes_to_check),
        assay='RNA' )+th+scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
DoHeatmap(msce,top5$gene,size=3)
ggsave(filename=paste0(sel.clust,'_msce.markers_heatmap.pdf'),width =18,height = 12)

save(msce,file =paste0(name,"_uncluster.Rdata"))
rm(list=ls());gc()
load("Myeloid_cell_uncluster.Rdata")
DimPlot(msce, reduction = "umap", group.by = "seurat_clusters",label = T) 
DimPlot(msce, reduction = "umap", group.by = sel.clust,label = T) 
ggsave('umap_by_CCA_snn_res.2.pdf',width = 6,height = 6)
####cell identification#####
library(stringr)  
celltype=data.frame(ClusterID=0:(length(table(Idents(msce)))-1),celltype=0:(length(table(Idents(msce)))-1))
celltype[celltype$ClusterID %in% c(14
),2]='DC' #'cDC1'
celltype[celltype$ClusterID %in% c(6
),2]='DC'#'cDC2'
celltype[celltype$ClusterID %in% c(2,
                                   3,
                                   10,
                                   12,
                                   13
),2]='Macrophage'
celltype[celltype$ClusterID %in% c(17,
                                   22                                   
),2]='Mast'
celltype[celltype$ClusterID %in% c(4,
                                   5,
                                   19,
                                   20                                   
),2]='Monocyte'
celltype[celltype$ClusterID %in% c(0,
                                   1,
                                   8,
                                   11                                   
),2]='Neutrophil'
celltype[celltype$ClusterID %in% c(18
),2]='DC'#'pDC'
celltype[celltype$ClusterID %in% c(21
),2]='DC'#'LAMP3_DC'
celltype[celltype$ClusterID %in% c(7,
                                   9,
                                   15                                   
),2]='T_cell'
celltype[celltype$ClusterID %in% c(16
),2]='Unknown'
celltype
table(celltype$celltype)
msce@meta.data$celltype = "NA"
for(i in 1:nrow(celltype)){
  msce@meta.data[which(msce@active.ident == celltype$ClusterID[i]),'celltype'] <- celltype$celltype[i]}
table(msce@meta.data$celltype)
th=theme(axis.text.x = element_text(angle = 45, 
                                    vjust = 0.5, hjust=0.5)) 
genes_to_check =c(#"CD3D","CD3E","CD3G", "CD2",
  #"IRF7","CXCR3","LILRA4",#pDC
  "FCGR3B","CXCL8","G0S2","CSF3R",#neu"IFITM2","S100A9","S100A8",
  "LYZ","VCAN","FCN1","KYNU",#mono
  "TPSAB1","TPSB2","MS4A2","CPA3", 
  "IRF7","CXCR3","LILRA4","IL3RA",#pDC
  "CD274","CCR7","CCL22","BIRC3","IDO1","IL4l1","LAMP3",#LAMP3DC/mregDC
  "C1QA","MSR1","C1QB","TREM2", #Macrophage  "APOE","NUPR1","APOC1","SPP1","CD68",
  "CD1E","CD1C","FCER1A","CLEC10A",#Dendritic ,"CLEC9A","PPA1",
  "XCR1","CLEC9A","IDO1","CLIC2"#cDC1,"PTDSS1","SCARB1","IL6ST","CD40","CST7","NET1","ANXA6"
)
DotPlot(msce, features = unique(genes_to_check),
        assay='RNA' ,group.by ='celltype' )+theme(axis.text.x = element_text(angle = 90)) +scale_color_gradient2(low="black",high="red",mid="white",midpoint = 0)
name="myeloids"
ggsave(paste0(name,"_markers_.pdf"),width = 6,height =2.2)

DimPlot(msce, reduction = "umap", group.by = sel.clust,label = T) +theme(aspect.ratio = 1)|DimPlot(msce, reduction = "umap", group.by = "celltype",label = T) +theme(aspect.ratio = 1)#用

DimPlot(msce, reduction = "umap", group.by = sel.clust,label = T) +theme(aspect.ratio = 1)#用
ggsave(paste0(name,"_umap_resolution.pdf"),height = 6,width = 7.6)
DimPlot(msce, reduction = "umap", group.by = "celltype",label = T) +theme(aspect.ratio = 1)#用
ggsave(paste0(name,"_umap_celltype.pdf"),height = 6,width = 7.6)


#doubletremoval
table(msce$celltype)
Idents(msce) <- "celltype"
save(msce,file="brefore_filter_msce.Rdata")
load("brefore_filter_msce.Rdata")
msce <- subset(msce, cells = colnames(msce)[which(!msce$celltype %in% c('Unknown',"T_cell"))])
msce=RunUMAP(msce, dims = 1:20)
table(msce$celltype)
DimPlot(msce, reduction = "umap", group.by = "celltype",label = T) +theme(aspect.ratio = 1)#用
ggsave(paste0(name,"umap_celltype.pdf"),height = 6,width = 7.6)


#cell_proportion_1####
Idents(msce) <- msce$celltype
table(msce$patient_id)
prop.table(table(Idents(msce)))
table(Idents(msce), msce$patient_id)
Cellratio <- prop.table(table(Idents(msce), msce$patient_id), margin = 2)
Cellratio <- as.data.frame(Cellratio)
colnames(Cellratio)[1] <- "Cell_type"
allcolour=c("#DC143C","#0000FF","#20B2AA","#FFA500","#9370DB","#98FB98","#F08080","#1E90FF","#7CFC00","#FFFF00",
            "#808000","#FF00FF","#FA8072","#7B68EE","#9400D3","#800080","#A0522D","#D2B48C","#D2691E","#87CEEB","#40E0D0","#5F9EA0",
            "#FF1493","#0000CD","#008B8B","#FFE4B5","#8A2BE2","#228B22","#E9967A","#4682B4","#32CD32","#F0E68C","#FFFFE0","#EE82EE",
            "#FF6347","#6A5ACD","#9932CC","#8B008B","#8B4513","#DEB887")
library(ggplot2)
ggplot(Cellratio) + 
  geom_bar(aes(x =Var2, y= Freq, fill = Cell_type),stat = "identity",width = 0.7,size = 0.5,colour = '#222222')+ 
  theme_classic() +
  labs(x='Sample',y = 'Ratio')+
  scale_fill_manual(values = allcolour)
ggsave(paste0(name,"_propotion_of_all_celltype.pdf"),width = 12,height = 4)
#cell_proportion_2####
Idents(msce) <- msce$celltype
table(msce$type)
prop.table(table(Idents(msce)))
table(Idents(msce), msce$type)
Cellratio <- prop.table(table(Idents(msce), msce$type), margin = 2)
Cellratio <- as.data.frame(Cellratio)
colnames(Cellratio)[1] <- "Cell_type"
allcolour=c("#DC143C","#0000FF","#20B2AA","#FFA500","#9370DB","#98FB98","#F08080","#1E90FF","#7CFC00","#FFFF00",
            "#808000","#FF00FF","#FA8072","#7B68EE","#9400D3","#800080","#A0522D","#D2B48C","#D2691E","#87CEEB","#40E0D0","#5F9EA0",
            "#FF1493","#0000CD","#008B8B","#FFE4B5","#8A2BE2","#228B22","#E9967A","#4682B4","#32CD32","#F0E68C","#FFFFE0","#EE82EE",
            "#FF6347","#6A5ACD","#9932CC","#8B008B","#8B4513","#DEB887")
library(ggplot2)
ggplot(Cellratio) + 
  geom_bar(aes(x =Var2, y= Freq, fill = Cell_type),stat = "identity",width = 0.7,size = 0.5,colour = '#222222')+ 
  theme_classic() +
  labs(x='Sample',y = 'Ratio')+
  scale_fill_manual(values = allcolour)
#+theme(panel.border = element_rect(fill=NA,color="black", size=0.5, linetype="solid"))
ggsave(paste0(name,"_propotion_of_all_celltype_by_type.pdf"),width = 4,height = 4)

#cell_proportion3####
#各type分组的细胞比例
#tksce$celltype <- factor(tksce$celltype)
#msce$celltypeo<- msce$celltype
table(msce$celltypeo)
table(msce$celltypes)
msce$celltype<- msce$celltypeo
df <- FetchData(msce, vars = c('celltype', 'type',"patient_id"))
table(df$type)
table(df$patient_id)
prop.table(table(df$celltype))
prop.table(table(df$type))
table(df$celltype, df$type)
table(df$celltype, df$patient_id)
Cellratio <- prop.table(table(df$celltype,df$patient_id),margin = 2)
Cellratio <- as.data.frame(Cellratio)
colnames(Cellratio) <- c('celltype',"patient_id","Freq")
#
Cellratio$type <- ""
Cellratio$type <- substr(Cellratio$patient_id,5,5)
Cellratio$patient <- substr(Cellratio$patient_id,1,3)
# group_info_adding
# Cellratio$type <- ""
# Cellratio$type[which(Cellratio$patient_id %in% unique(df$patient_id[which(df$type =="low")]))] <- "low"
# Cellratio$type[which(Cellratio$patient_id %in% unique(df$patient_id[which(df$type =="high")]))] <- "high"
# table(Cellratio$type)
#plot1
ggplot(Cellratio, aes(x=type, y=Freq,color=type)) + 
  geom_jitter(width = 0.2, alpha = 0.5)+facet_wrap(~celltype)  
library(ggsci)
library(tidyr)
library(ggpubr)
#plot2
Cellratio$type <- factor(Cellratio$type,levels=c("N","J","T"))
class(Cellratio$type)
#plot3
ggboxplot(Cellratio, x = "celltype", y = "Freq",
          fill = "type", palette = c("#2B9885","#DA6C4F","#E2BE6A"))+
  stat_compare_means(aes(group = type),
                     method = "wilcox.test",#"wilcox.test" 多组用，两组用t.test
                     label = "p.signif",
                     symnum.args=list(cutpoints = c(0, 0.001, 0.01, 0.05, 1),
                                      symbols = c("***", "**", "*", "")))
#ggsave("immune_prop_by_type.pdf",width = 6,height = 4)#用
allcolour=c("#2F89CA","#F2C31C","#DD1F4D","#FFA500","#9370DB",#1-5
            "#98FB98","#F08080","#1E90FF","#7CFC00","#FFFF00",#6-10
            "#808000","#FF00FF","#FA8072","#7B68EE","#9400D3",#11-15
            "#800080","#A0522D","#D2B48C","#D2691E","#87CEEB",#16-20
            "#40E0D0","#5F9EA0","#063A94","#0000CD","#008B8B",#21-25
            "#FFE4B5","#8A2BE2","#228B22","#E9967A","#4682B4",
            "#32CD32","#F0E68C","#FFFFE0","#EE82EE","#FF6347",
            "#6A5ACD","#9932CC","#8B008B","#8B4513","#DEB887")
#plot4
my_comparisons = list( c("N", "J"),c("N", "T"),c("J", "T"))
ggplot(Cellratio, aes(x = type, y = Freq))+ 
  labs(y="Proportion",x= "Position",title = "Cell composition")+
  scale_colour_manual(name="", values =allcolour)+
  geom_boxplot(aes(color = type),position=position_dodge(0.5),size=0.4,
               outlier.alpha = 1, outlier.size = 0.5)+
  theme_bw() + 
  theme(panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank())+
  scale_y_continuous(labels = scales::percent
                     #limits = c(0, max(Cellratio$Freq)+0.1)
  )+
  geom_point(data = Cellratio, aes(x = type, y = Freq, fill=patient), #patient_id改成样本号
             size = 5, shape = 21,stroke = 0.5,alpha = 0.5)+
  facet_wrap(~ celltype,scales = "free",ncol = 4) + 
  stat_compare_means(aes(group = type),comparisons = my_comparisons,
                     method = "wilcox.test",#"wilcox.test" 多组用，两组用t.test
                     #ref.group = "HCC",
                     size = 5,
                     hide.ns =T,
                     label = "p.signif",
                     #label.y=max(Cellratio$Freq),
                     #label.x = 1.5,#两个名称之间
                     symnum.args=list(cutpoints = c(0, 0.001, 0.01, 0.05, 1),
                                      symbols = c("***", "**", "*", "")
                     )
  )


allcolour=c("#1CB4B8","#F2C31C","#DD1F4D","#FFA500","#9370DB",#1-5
            "#98FB98","#F08080","#1E90FF","#7CFC00","#FFFF00",#6-10
            "#808000","#FF00FF","#FA8072","#7B68EE","#9400D3",#11-15
            "#800080","#A0522D","#D2B48C","#D2691E","#87CEEB",#16-20
            "#40E0D0","#5F9EA0","#063A94","#0000CD","#008B8B",#21-25
            "#FFE4B5","#8A2BE2","#228B22","#E9967A","#4682B4",
            "#32CD32","#F0E68C","#FFFFE0","#EE82EE","#FF6347",
            "#6A5ACD","#9932CC","#8B008B","#8B4513","#DEB887")
my_comparisons = list( c("N", "J"),c("N", "T"),c("J", "T"))
plot5
ggboxplot(Cellratio, x = "type", y = "Freq",
          fill = "type", palette = allcolour)+
  theme(legend.position="right", panel.border = element_rect(color = "black",  fill = NA))+
  facet_wrap(~ celltype,scales = "free",ncol = 3) + 
  geom_point(data = Cellratio, aes(x = type, 
                                   y = Freq, 
                                   color = patient), #patient_id改成样本号
             size = 6, 
             shape = 21,
             stroke = 0.5,alpha = 0.5)+
  stat_compare_means(comparisons = my_comparisons,
                     method = "wilcox.test",#"wilcox.test" 多组用，两组用t.test
                     label = "p.signif",
                     symnum.args=list(cutpoints = c(0, 0.001, 0.01, 0.05, 1),
                                      symbols = c("***", "**", "*", "")))+ggtitle("Cell type")+
  theme(plot.title = element_text(hjust = 0.5))
ggsave("immune_prop_by_type2.pdf",width = 6,height = 6)#用


#reprojection####
msce$celltypes <- "Unknown"
#macro##
library(dplyr)
setwd("D:\\leadtest\\immune\\myeloid\\macro2")
load("masce_marker.Rdata")
table(masce$celltype)
masce <- subset(masce, cells = colnames(masce)[which(colnames(masce) %in% colnames(msce))])
msce$celltypes[match(colnames(masce),colnames(msce))]<-masce$celltype%>%as.character()
table(msce$celltypes)

#DC#
setwd("D:\\leadtest\\immune\\myeloid\\DC")
load("dcsce_marker.Rdata")
table(dcsce$patient_id)
table(dcsce$celltype)
dcsce <- subset(dcsce, cells = colnames(dcsce)[which(colnames(dcsce) %in% colnames(msce))])
msce$celltypes[match(colnames(dcsce),colnames(msce))]<-dcsce$celltype%>%as.character()
table(msce$celltypes)
#neu#
setwd("D:\\leadtest\\immune\\myeloid\\neu")
load("neusce_marker.Rdata")
table(neusce$celltype)
neusce
neusce <- subset(neusce, cells = colnames(neusce)[which(colnames(neusce) %in% colnames(msce))])
msce$celltypes[match(colnames(neusce),colnames(msce))]<-neusce$celltype%>%as.character()
table(msce$celltypes)

#mono##
setwd("D:\\leadtest\\immune\\myeloid\\mono")
load("mosce_marker.Rdata")
table(mosce$celltype)
mosce <- subset(mosce, cells = colnames(mosce)[which(colnames(mosce) %in% colnames(msce))])
msce$celltypes[match(colnames(mosce),colnames(msce))]<-mosce$celltype%>%as.character()
table(msce$celltypes)
table(msce$celltype,msce$celltypes)

#mast
msce$celltypes[which(msce$celltype %in% c("Mast"))] <- "Mast"

table(msce$celltype)
setwd("D:\\leadtest\\immune\\myeloid")
table(msce$celltypes)
table(msce$celltype)
table(msce$celltype,msce$celltypes)
#celltypes####
DimPlot(msce,reduction = "umap",group.by = "celltypes",label = T) +theme(aspect.ratio = 1)
ggsave("celltypes.pdf",width = 6,height = 6)

#save_files####
save(msce,file ="msce_marker.Rdata")
rm(list = ls());gc()
setwd("D:\\leadtest\\immune\\myeloid")
load("msce_marker.Rdata")
table(msce$patient)
